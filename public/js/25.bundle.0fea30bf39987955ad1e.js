(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[25],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/* harmony default export */ __webpack_exports__["default"] = ({
  name: "OrdersApprovals",
  props: ['filtertab'],
  components: {},
  data: function data() {
    return {
      filter: false,
      orders: '',
      ppp: 10,
      search: '',
      formdate: '',
      todate: '',
      frm_decline: {
        upfor: 'vendor_approve',
        id: '',
        decfor: 'all',
        status: 'Decline',
        reason: ''
      }
    };
  },
  watch: {
    filtertab: function filtertab(n, o) {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(n == 'Orders Approvals')) {
                  _context.next = 3;
                  break;
                }

                _context.next = 3;
                return _this.get_my_orders();

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  },
  methods: {
    get_my_orders: function get_my_orders() {
      var _arguments = arguments,
          _this2 = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var url, loaderd;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                url = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : "/api/order";
                loaderd = _this2.$loading.show({
                  container: _this2.$refs.mainref
                });
                axios.get(url, {
                  params: {
                    search: _this2.search,
                    ppp: _this2.ppp,
                    formdate: _this2.formdate ? moment(_this2.formdate).utc().format('DD-MM-YYYY') : '',
                    todate: _this2.todate ? moment(_this2.todate).utc().format('DD-MM-YYYY') : '',
                    approval: '1'
                  }
                }).then(function (res) {
                  _this2.selected = [];
                  _this2.orders = res.data.data;
                  loaderd.hide();
                })["catch"](function (err) {
                  loaderd.hide();
                });

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    },
    decline_pop: function decline_pop(id, decfor) {
      var _this3 = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _this3.frm_decline.id = id;
                _this3.frm_decline.decfor = decfor;
                _this3.frm_decline.status = 'Decline';
                _this3.frm_decline.reason = '';
                $('#cancelModalId').modal('show');

              case 5:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }))();
    },
    updateStatus: function updateStatus() {
      var _this4 = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        var loaderd;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                loaderd = _this4.$loading.show({
                  container: _this4.$refs.mainref
                });
                axios.put('/api/order/' + _this4.frm_decline.id, _this4.frm_decline).then(function (res) {
                  _this4.frm_decline.id = '';
                  _this4.frm_decline.decfor = '';
                  _this4.frm_decline.reason = '';
                  $('#cancelModalId').modal('hide');
                  loaderd.hide();

                  _this4.get_my_orders(_this4.orders.path + '?page=' + _this4.orders.current_page);
                })["catch"](function (err) {
                  loaderd.hide();
                });

              case 2:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }))();
    },
    ApproveOrder: function ApproveOrder(id, decfor) {
      var _this5 = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _this5.frm_decline.id = id;
                _this5.frm_decline.decfor = decfor;
                _this5.frm_decline.status = 'Vendor Approved';
                _context5.next = 5;
                return _this5.updateStatus();

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }))();
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=template&id=4088f291&":
/*!***************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=template&id=4088f291& ***!
  \***************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function render() {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "tab-pane fade",
    attrs: {
      id: "ordersapprovals",
      role: "tabpanel",
      "aria-labelledby": "ordersapprovals-tab"
    }
  }, [_c("div", {
    staticClass: "container pb-5"
  }, [_c("div", {
    staticClass: "row"
  }, [_c("div", {
    staticClass: "col-12 text-center"
  }, [_c("h2", {
    staticClass: "mb-3"
  }, [_vm._v("Orders Approvals - Vendor")]), _vm._v(" "), _vm.orders ? _c("p", [_vm._v(_vm._s(_vm.orders.total) + " Orders")]) : _vm._e()])]), _vm._v(" "), _c("div", {
    staticClass: "row"
  }, [_c("div", {
    staticClass: "col-12 d-flex align-items-center mb-3"
  }, [_c("form", {
    staticClass: "productSearch d-flex align-items-center mr-3",
    staticStyle: {
      width: "380px"
    },
    on: {
      submit: function submit($event) {
        $event.preventDefault();
        return _vm.get_my_orders();
      }
    }
  }, [_c("div", {
    staticClass: "w-100"
  }, [_c("input", {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: _vm.search,
      expression: "search"
    }],
    attrs: {
      type: "text",
      placeholder: "Search Order # or Name"
    },
    domProps: {
      value: _vm.search
    },
    on: {
      input: function input($event) {
        if ($event.target.composing) return;
        _vm.search = $event.target.value;
      }
    }
  })]), _vm._v(" "), _vm._m(0)]), _vm._v(" "), _c("button", {
    staticClass: "btnTransparent",
    attrs: {
      type: "button"
    },
    on: {
      click: function click($event) {
        _vm.filter = !_vm.filter;
      }
    }
  }, [_c("img", {
    staticClass: "img-fluid",
    attrs: {
      src: "images/filter.png"
    }
  })]), _vm._v(" "), _vm.filter ? _c("div", {
    staticClass: "filterDropdown",
    staticStyle: {
      display: "block"
    }
  }, [_c("div", {
    staticClass: "filterHeader"
  }, [_c("h3", {
    staticClass: "title"
  }, [_vm._v("Filter By")]), _vm._v(" "), _c("button", {
    staticClass: "close",
    attrs: {
      type: "button"
    },
    on: {
      click: function click($event) {
        _vm.filter = false;
      }
    }
  }, [_vm._v("x")])]), _vm._v(" "), _c("div", {
    staticClass: "filterBody"
  }, [_c("div", {
    staticClass: "contentGroup"
  }, [_c("div", {
    staticClass: "groupTitle"
  }, [_vm._v("Order Date ")]), _vm._v(" "), _c("ul", {
    staticClass: "list-unstyled"
  }, [_c("li", {
    staticClass: "mb-3"
  }, [_c("div", {
    staticClass: "inlineDate"
  }, [_c("span", {
    staticClass: "text"
  }, [_vm._v("From:")]), _vm._v(" "), _c("div", {
    staticClass: "dateWrpr"
  }, [_c("datetime", {
    attrs: {
      "input-class": "dateWithIcon",
      "max-datetime": _vm.todate,
      auto: true,
      title: "Form Date"
    },
    model: {
      value: _vm.formdate,
      callback: function callback($$v) {
        _vm.formdate = $$v;
      },
      expression: "formdate"
    }
  }), _vm._v(" "), _vm.formdate ? _c("button", {
    staticClass: "clearDt",
    on: {
      click: function click($event) {
        _vm.formdate = "";
      }
    }
  }, [_c("i", {
    staticClass: "fa fa-times",
    attrs: {
      "aria-hidden": "true"
    }
  })]) : _vm._e()], 1)])]), _vm._v(" "), _c("li", [_c("div", {
    staticClass: "inlineDate"
  }, [_c("span", {
    staticClass: "text"
  }, [_vm._v("To:")]), _vm._v(" "), _c("div", {
    staticClass: "dateWrpr"
  }, [_c("datetime", {
    attrs: {
      "input-class": "dateWithIcon",
      "min-datetime": _vm.formdate,
      auto: true,
      title: "To Date"
    },
    model: {
      value: _vm.todate,
      callback: function callback($$v) {
        _vm.todate = $$v;
      },
      expression: "todate"
    }
  }), _vm._v(" "), _vm.todate ? _c("button", {
    staticClass: "clearDt",
    on: {
      click: function click($event) {
        _vm.todate = "";
      }
    }
  }, [_c("i", {
    staticClass: "fa fa-times",
    attrs: {
      "aria-hidden": "true"
    }
  })]) : _vm._e()], 1)])])])]), _vm._v(" "), _c("button", {
    staticClass: "btn btn-primary",
    attrs: {
      type: "button"
    },
    on: {
      click: function click($event) {
        _vm.get_my_orders();

        _vm.filter = false;
      }
    }
  }, [_vm._v("Apply")])])]) : _vm._e()])]), _vm._v(" "), _c("div", {
    staticClass: "row"
  }, [_c("div", {
    staticClass: "col-12"
  }, [_c("div", {
    staticClass: "divTable rowStyle3"
  }, [_vm._m(1), _vm._v(" "), _c("div", {
    staticClass: "tbody w-100 accordion",
    attrs: {
      id: "ordersapprovalsAccordVndr"
    }
  }, [_vm._l(_vm.orders.data, function (order, index) {
    return _vm.orders && _vm.orders.data && _vm.orders.data.length > 0 ? _c("div", {
      key: index,
      staticClass: "tr d-flex flex-wrap whiteRow w-100"
    }, [_c("div", {
      staticClass: "td one",
      domProps: {
        textContent: _vm._s(order.id)
      }
    }), _vm._v(" "), _c("div", {
      staticClass: "td two"
    }, [_vm._v("\n                                " + _vm._s(order.order_trans && order.order_trans[0] && order.order_trans[0].project && order.order_trans[0].project.contractor ? order.order_trans[0].project.contractor.first_name + " " + order.order_trans[0].project.contractor.last_name : order.client.first_name + " " + order.client.last_name) + "\n                            ")]), _vm._v(" "), _c("div", {
      staticClass: "td three"
    }, [_vm._v("\n                                " + _vm._s(order.order_trans && order.order_trans[0] && order.order_trans[0].project && order.order_trans[0].project.contractor ? order.order_trans[0].project.contractor.company_address : order.client.company_address) + "\n                            ")]), _vm._v(" "), _c("div", {
      staticClass: "td four"
    }, [_vm._v("\n                                " + _vm._s(order.order_trans && order.order_trans[0] && order.order_trans[0].project ? order.order_trans[0].project.sales_man : "-") + "\n                            ")]), _vm._v(" "), _c("div", {
      staticClass: "td five"
    }, [_c("div", {
      staticClass: "d-flex align-items-center w-100 justify-content-between"
    }, [_c("div", {
      staticClass: "approve",
      on: {
        click: function click($event) {
          return _vm.ApproveOrder(order.id, "all");
        }
      }
    }, [_vm._m(2, true), _vm._v("Approve\n                                    ")]), _vm._v(" "), _c("div", {
      staticClass: "decline",
      on: {
        click: function click($event) {
          return _vm.decline_pop(order.id, "all");
        }
      }
    }, [_vm._m(3, true), _vm._v("decline\n                                    ")]), _vm._v(" "), _c("div", [_c("button", {
      staticClass: "btnTransparent",
      attrs: {
        type: "button",
        "data-toggle": "collapse",
        "data-target": "#voa" + index,
        "aria-expanded": "true",
        "aria-controls": "voa" + index
      }
    }, [_c("i", {
      staticClass: "fa fa-eye",
      attrs: {
        "aria-hidden": "true"
      }
    })])])])]), _vm._v(" "), _c("div", {
      staticClass: "bottomAccordion container-fluid collapse",
      attrs: {
        id: "voa" + index,
        "aria-labelledby": "headingOne",
        "data-parent": "#ordersapprovalsAccordVndr"
      }
    }, [_c("div", {
      staticClass: "row align-items-center"
    }, [_c("div", {
      staticClass: "column left"
    }, [_vm._l(order.order_trans, function (item, oi) {
      return order.order_trans ? _c("div", {
        key: oi,
        staticClass: "borderBottom py-4 row align-items-center"
      }, [_c("div", {
        staticClass: "col-md-6"
      }, [_c("div", {
        staticClass: "d-flex orderGeneralInfo"
      }, [_c("div", {
        staticClass: "orderImgWrpr"
      }, [_c("img", {
        staticClass: "img-fluid",
        attrs: {
          src: _vm.set_image(item.photo),
          height: "255",
          width: "230"
        }
      })]), _vm._v(" "), _c("div", {
        staticClass: "orderDetails"
      }, [_c("p", {
        staticClass: "name",
        domProps: {
          textContent: _vm._s(item.product_name)
        }
      }), _vm._v(" "), _c("p", [_c("span", {
        staticClass: "textLightGray"
      }, [_vm._v("Width:")]), _c("span", [_vm._v(" ")]), _vm._v(" "), _c("span", {
        staticClass: "textBold600",
        domProps: {
          textContent: _vm._s(item.width_size)
        }
      }), _vm._v(" "), _c("span", [_vm._v("   ")]), _vm._v(" "), _c("span", {
        staticClass: "textLightGray"
      }, [_vm._v("Height:")]), _c("span", [_vm._v(" ")]), _vm._v(" "), _c("span", {
        staticClass: "textBold600",
        domProps: {
          textContent: _vm._s(item.height_size)
        }
      })]), _vm._v(" "), _c("p", [_c("span", {
        staticClass: "textLightGray"
      }, [_vm._v("Qty:")]), _c("span", [_vm._v(" ")]), _vm._v(" "), _c("span", {
        staticClass: "textBold600",
        domProps: {
          textContent: _vm._s(item.qty)
        }
      }, [_vm._v("2")])])])])]), _vm._v(" "), _c("div", {
        staticClass: "col-md-6 text-center"
      }, [_c("div", {
        staticClass: "orderPrice"
      }, [_c("span", {
        staticClass: "textLightGray"
      }, [_vm._v("Price: ")]), _c("span", [_vm._v(" ")]), _vm._v(" "), _c("span", {
        staticClass: "textBold600"
      }, [_vm._v(_vm._s(_vm._f("toCurrency")(item.final_price * item.qty)))])]), _vm._v(" "), _c("div", {
        staticClass: "w-100 d-flex justify-content-between"
      }, [_c("div", {
        staticClass: "approve",
        on: {
          click: function click($event) {
            return _vm.ApproveOrder(item.id, "single");
          }
        }
      }, [_vm._m(4, true), _vm._v("Approve\n                                                    ")]), _vm._v(" "), _c("div", {
        staticClass: "decline",
        on: {
          click: function click($event) {
            return _vm.decline_pop(item.id, "single");
          }
        }
      }, [_vm._m(5, true), _vm._v("Decline")])])])]) : _vm._e();
    }), _vm._v(" "), _c("div", {
      staticClass: "row"
    }, [_c("div", {
      staticClass: "col-12 mt-4"
    }, [_c("p", {
      staticClass: "textBold600 font18"
    }, [_c("span", {
      staticClass: "textLightGray font18"
    }, [_vm._v("Total Price:")]), _vm._v(" "), _c("span", [_vm._v(_vm._s(_vm._f("toCurrency")(order.total_order_item_price)))])])])])], 2), _vm._v(" "), _c("div", {
      staticClass: "column right"
    }, [_c("p", {
      staticClass: "textBold600"
    }, [_vm._v("Client")]), _vm._v(" "), _c("p", [_vm._v(_vm._s(order.client ? order.client.first_name + " " + order.client.last_name : "-")), _c("br"), _vm._v("\n                                            " + _vm._s(order.shipping_street + " " + order.shipping_apartment)), _c("br"), _vm._v("\n                                            " + _vm._s(order.shipping_city)), _c("br"), _vm._v("\n                                            " + _vm._s(order.shipping_state)), _c("br"), _vm._v("\n                                            " + _vm._s(order.shipping_zip_code)), _c("br"), _vm._v("\n                                            Tel: " + _vm._s(order.shipping_country_code + " " + order.shipping_phone_number) + "\n                                        ")])])])])]) : _vm._e();
  }), _vm._v(" "), _c("UjPagination", {
    attrs: {
      records: _vm.orders,
      ppp: _vm.ppp
    },
    on: {
      fetchRecord: function fetchRecord(val) {
        return _vm.get_my_orders(val);
      },
      "update:ppp": function updatePpp($event) {
        _vm.ppp = $event;
      }
    }
  })], 2)])])])]), _vm._v(" "), _c("br"), _vm._v(" "), _c("div", {
    staticClass: "modal cancelModal fade",
    attrs: {
      id: "cancelModalId",
      tabindex: "-1",
      role: "dialog",
      "aria-labelledby": "exampleModalLabel",
      "aria-hidden": "true"
    }
  }, [_c("div", {
    staticClass: "modal-dialog modal-dialog-centered",
    attrs: {
      role: "document"
    }
  }, [_c("form", {
    staticClass: "modal-content",
    on: {
      submit: function submit($event) {
        $event.preventDefault();
        return _vm.updateStatus();
      }
    }
  }, [_vm._m(6), _vm._v(" "), _c("div", {
    staticClass: "modal-body px-4"
  }, [_c("h5", {
    staticClass: "modal-title mb-4 mt-4",
    attrs: {
      id: "exampleModalLabel"
    }
  }, [_vm._v("Are you sure want to decline this order/product\n                    ")]), _vm._v(" "), _c("textarea", {
    directives: [{
      name: "model",
      rawName: "v-model",
      value: _vm.frm_decline.reason,
      expression: "frm_decline.reason"
    }],
    staticClass: "form-control",
    attrs: {
      rows: "4",
      placeholder: "Reason for decline"
    },
    domProps: {
      value: _vm.frm_decline.reason
    },
    on: {
      input: function input($event) {
        if ($event.target.composing) return;

        _vm.$set(_vm.frm_decline, "reason", $event.target.value);
      }
    }
  })]), _vm._v(" "), _vm._m(7)])])])]);
};

var staticRenderFns = [function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("button", {
    staticClass: "btnTransparent searchBtn",
    attrs: {
      type: "submit"
    }
  }, [_c("img", {
    staticClass: "img-fluid",
    attrs: {
      src: "images/arrow-point-to-right.png",
      alt: "",
      width: "16"
    }
  })]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "thead w-100"
  }, [_c("div", {
    staticClass: "tr d-flex flex-wrap w-100 whiteRow"
  }, [_c("div", {
    staticClass: "td one"
  }, [_vm._v("Order")]), _vm._v(" "), _c("div", {
    staticClass: "td two"
  }, [_vm._v("Contractor")]), _vm._v(" "), _c("div", {
    staticClass: "td three"
  }, [_vm._v("Address")]), _vm._v(" "), _c("div", {
    staticClass: "td four"
  }, [_vm._v("Representatives")]), _vm._v(" "), _c("div", {
    staticClass: "td five"
  }, [_vm._v("Action")])])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("span", {
    staticClass: "icon"
  }, [_c("img", {
    attrs: {
      src: "images/basic-tick.png",
      alt: ""
    }
  })]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("span", {
    staticClass: "icon"
  }, [_c("img", {
    attrs: {
      src: "images/cancel.png",
      alt: ""
    }
  })]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("span", {
    staticClass: "icon"
  }, [_c("img", {
    attrs: {
      src: "images/basic-tick.png",
      alt: ""
    }
  })]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("span", {
    staticClass: "icon"
  }, [_c("img", {
    attrs: {
      src: "images/cancel.png",
      alt: ""
    }
  })]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("button", {
    staticClass: "close",
    attrs: {
      type: "button",
      "data-dismiss": "modal",
      "aria-label": "Close"
    }
  }, [_c("span", {
    attrs: {
      "aria-hidden": "true"
    }
  }, [_vm._v("×")])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "d-flex flex-column align-items-center w-100"
  }, [_c("button", {
    staticClass: "submit mt-4 mb-3",
    attrs: {
      type: "submit"
    }
  }, [_vm._v("Yes I'm Sure")]), _vm._v(" "), _c("button", {
    staticClass: "btnTransparent",
    attrs: {
      type: "button",
      "data-dismiss": "modal",
      "aria-label": "Close"
    }
  }, [_vm._v("Cancel")])]);
}];
render._withStripped = true;


/***/ }),

/***/ "./resources/js/components/account/Vendor/OrdersApprovals.vue":
/*!********************************************************************!*\
  !*** ./resources/js/components/account/Vendor/OrdersApprovals.vue ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _OrdersApprovals_vue_vue_type_template_id_4088f291___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OrdersApprovals.vue?vue&type=template&id=4088f291& */ "./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=template&id=4088f291&");
/* harmony import */ var _OrdersApprovals_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OrdersApprovals.vue?vue&type=script&lang=js& */ "./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OrdersApprovals_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OrdersApprovals_vue_vue_type_template_id_4088f291___WEBPACK_IMPORTED_MODULE_0__["render"],
  _OrdersApprovals_vue_vue_type_template_id_4088f291___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/account/Vendor/OrdersApprovals.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************!*\
  !*** ./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OrdersApprovals_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./OrdersApprovals.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OrdersApprovals_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=template&id=4088f291&":
/*!***************************************************************************************************!*\
  !*** ./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=template&id=4088f291& ***!
  \***************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_OrdersApprovals_vue_vue_type_template_id_4088f291___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib??vue-loader-options!./OrdersApprovals.vue?vue&type=template&id=4088f291& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/account/Vendor/OrdersApprovals.vue?vue&type=template&id=4088f291&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_OrdersApprovals_vue_vue_type_template_id_4088f291___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_OrdersApprovals_vue_vue_type_template_id_4088f291___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,