(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[10],{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/js/components/SideBarModal.vue":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/js/components/SideBarModal.vue ***!
  \************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["default"] = ({
  data() {
    return {
      isOpen: false
    };
  },
  methods: {
    openSideModal() {
      this.isOpen = true;
    },
    closeSideModal() {
      this.isOpen = false;
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/js/components/Tickets/index.vue":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/js/components/Tickets/index.vue ***!
  \*************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var vue_read_more_smooth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-read-more-smooth */ "./node_modules/vue-read-more-smooth/dist/vue-read-more-smooth.common.js");
/* harmony import */ var vue_read_more_smooth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue_read_more_smooth__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _SideBarModal_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../SideBarModal.vue */ "./resources/js/components/SideBarModal.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ __webpack_exports__["default"] = ({
  components: {
    VueReadMoreSmooth: (vue_read_more_smooth__WEBPACK_IMPORTED_MODULE_0___default()),
    SidebarModal: _SideBarModal_vue__WEBPACK_IMPORTED_MODULE_1__["default"]
  },
  data() {
    return {
      close_btn: true,
      additionalMore: [],
      problemsMore: [],
      search_machines: [],
      search_sites: [],
      search: {
        page: 1,
        machine_id: "",
        site_id: "",
        complaint_nature: "",
        ticket_type: "",
        ticket: ""
      },
      popticket: {},
      categories: [],
      sub_categories: [],
      sites: [],
      selected_machine: "",
      users: [],
      machines: [],
      Tickets: {},
      editmode: false,
      MaterialCost: null,
      ServiceCost: null,
      form: new Form({
        id: "",
        site_id: "",
        category_id: "",
        sub_category_id: "",
        free_service_no: "",
        ticket_type: "Periodic Maintenance",
        service_type: "Paid Service",
        machine_id: "",
        ticket_no: "",
        vendor_id: "",
        user_id: "",
        likely_date: "",
        estimated_material_cost: "",
        estimated_service_cost: "",
        maintenance_provider: "vendor",
        problem_description: "",
        complaint_nature: "Major"
      }),
      stages: [{
        id: "",
        stage_no: "",
        stage_date: "",
        description: "",
        file: "",
        new_file: ""
      }],
      formclose: new Form({
        id: "",
        machine_status: "",
        edit_type: "closeticket",
        ticket_type: "Periodic Maintenance",
        actual_date: "",
        actual_material_cost: "",
        actual_service_cost: "",
        current_run_hour: "",
        current_km_run: "",
        current_production_fig: "",
        production_loss: "",
        production_loss_amount: "",
        status: "Closed",
        vendor_resolve_date: "",
        vendor_attain_date: "",
        vendor_response_date: "",
        vendor_call_date: "",
        rca: "",
        materialPOS: "",
        servicePOS: ""
      }),
      pop_machine: "",
      pop_ticket: "",
      opn_stage: ["Vendor created", "Vendor Assigned", "Order issued", "Payment under process", "Payment Done", "Logistics under process", "Materials despatched", "Material received at site", "Maintainace under progress"],
      last_stage_index: 0,
      last_stage_date: "",
      json_fields: {
        "Ticket No": "ticket_no",
        "Ticket Type": "ticket_type",
        Machine: {
          field: "machine",
          callback: val => {
            return val.name + " - " + val.far_no;
          }
        },
        "Likely Date": "likely_date",
        "Reversion Date": "reversion_date",
        "Reversion Reason": "reversion_reason",
        "Estimated Material Cost": "estimated_material_cost",
        "Estimated Service Cost": "estimated_service_cost",
        "Actual Date": "actual_date",
        "Actual Material Cost": "actual_material_cost",
        "Actual Service Cost": "actual_service_cost",
        "Status": "status",
        "Service Type": "service_type",
        "Maintenance Provider": "maintenance_provider",
        "Problem Description": "problem_description",
        "Complaint Nature": "complaint_nature",
        "Status During Complaint": "status_during_complaint"
      },
      json_meta: [[{
        key: "charset",
        value: "utf-8"
      }]]
    };
  },
  methods: {
    openSideModal() {
      this.$refs.sidebarModal.openSideModal();
    },
    closeSideModal() {
      this.$refs.sidebarModal.closeSideModal();
    },
    async reset_filter() {
      this.search = {
        page: 1,
        machine_id: "",
        site_id: "",
        complaint_nature: "",
        ticket_type: "",
        ticket: ""
      };
    },
    async export_csv() {
      const response = await axios.get("api/ticket?export=1", {
        params: {
          search: this.search
        }
      });
      return response.data.data;
    },
    startDownload() {
      Swal.fire({
        title: "Please Wait !",
        html: "Data populating",
        // add html attribute if you want or remove
        allowOutsideClick: false,
        onBeforeOpen: () => {
          Swal.showLoading();
        }
      });
    },
    finishDownload() {
      Swal.close();
    },
    sclick(x, p = "") {
      if (p) {
        let a = this.problemsMore[x] ? false : true;
        this.$set(this.problemsMore, x, a);
      } else {
        let a = this.additionalMore[x] ? false : true;
        this.$set(this.additionalMore, x, a);
      }
    },
    getLabel(val) {
      if (typeof val === "object") {
        return val.far_no + " - " + val.name;
      } else {
        return val;
      }
    },
    viewModal(ticket) {
      this.pop_ticket = "";
      axios.get("api/ticket/" + ticket.id).then(res => {
        this.pop_ticket = res.data.data;
      }).catch(err => {
        this.pop_ticket = ticket;
      });
      axios.get("api/category/" + ticket.category_id).then(res => {
        this.sub_categories = res.data.data;
      });
      $("#viewmodal").modal("show");
    },
    AddStage() {
      this.stages.push({
        id: "",
        stage_no: "",
        stage_date: "",
        description: "",
        file: "",
        new_file: ""
      });
    },
    async choose_stage_file(event, x) {
      this.stages[x].new_file = event.target.files[0];
    },
    async uploadMaterialCost(event) {
      this.MaterialCost = event.target.files;
    },
    async uploadServiceCost(event) {
      this.ServiceCost = event.target.files;
    },
    getResults(page = 1) {
      this.$Progress.start();
      this.search.page = page;
      axios.get("/api/ticket", {
        params: this.search
      }).then(data => {
        this.Tickets = data.data.data;
        this.additionalMore = new Array(this.Tickets.data.length).fill(false);
        this.problemsMore = new Array(this.Tickets.data.length).fill(false);
      });
      this.$Progress.finish();
    },
    calculate_loss() {
      if (this.formclose.actual_date && this.pop_ticket.created_at) {
        let a = new Date(this.formclose.actual_date).toISOString();
        let b = new Date(this.pop_ticket.created_at).toISOString();
        const dateB = moment(a);
        const dateC = moment(b);
        var Diff = dateB.diff(dateC, 'days') + 1;
        let hrs = this.pop_machine.prdloss_hrs;
        let rate = this.pop_machine.prdloss_hr_rate;
        let tloss = Diff * hrs;
        this.formclose.production_loss_amount = tloss * rate;
        this.formclose.production_loss = tloss;
        console.log(hrs, rate, Diff);
      }
    },
    submitCloseTicket() {
      this.$forceUpdate();
      this.$validator.validateAll("closeticket").then(async valid => {
        if (valid) {
          let pop_loader = this.$loading.show({});
          let last_mDate = this.pop_machine.last_maintenances ? this.pop_machine.last_maintenances.datetime : this.pop_machine.last_maintenance_date;
          if (last_mDate && this.formclose.actual_date && Date.parse(moment(this.formclose.actual_date).format("MMM,DD YYYY")) < Date.parse(moment(last_mDate).format("MMM,DD YYYY"))) {
            pop_loader.hide();
            Swal.fire("You can not add previous date's data, Please remove record from maintenance list.", "", "warning");
          } else {
            this.close_btn = false;
            this.formclose.put("/api/ticket/" + this.formclose.id).then(response => {
              if (response.data.success) {
                $("#closemodal").modal("hide");
                Toast.fire({
                  icon: "success",
                  title: response.data.message
                });
                this.upload_files(this.formclose.id, "actual");
                this.$validator.reset();
                this.formclose.reset();
                this.loadTickets();
              }
              this.close_btn = true;
              pop_loader.hide();
            }).catch(() => {
              this.close_btn = true;
              pop_loader.hide();
              if (typeof err.response.data != "undefined") {
                this.$setErrorsFromResponse(err.response.data);
              }
            });
          }
        }
      });
    },
    closeModal(ticket) {
      this.$validator.pause();
      $("#closemodal").modal("show");
      this.$validator.reset();
      this.formclose.reset();
      this.$refs.fileactualservice.value = null;
      this.$refs.fileactualmaterial.value = null;
      this.pop_ticket = ticket;
      this.pop_machine = ticket.machine;
      this.formclose.fill(ticket);
      this.formclose.edit_type = "closeticket";
      this.$validator.resume();
    },
    editModal(ticket) {
      this.editmode = true;
      this.$validator.pause();
      this.form.reset();
      this.pop_ticket = ticket;
      // if (this.$gate.isAdmin()) {
      this.$refs.fileservice.value = null;
      this.$refs.filematerial.value = null;
      // }
      this.MaterialCost = null;
      this.ServiceCost = null;
      $("#addNew").modal("show");
      this.form.fill(ticket);
      this.form.likely_date = ticket.likely_date ? new Date(ticket.likely_date).toISOString() : "";
      this.stages = [];
      if (ticket.stages && ticket.stages.length > 0) {
        this.stages = ticket.stages;
      }
      this.$validator.resume();
    },
    newModal() {
      this.stages = [];
      this.AddStage();
      this.editmode = false;
      this.$validator.reset();
      this.$validator.pause();
      this.form.reset();
      // if (this.$gate.isAdmin()) {
      this.$refs.fileservice.value = null;
      this.$refs.filematerial.value = null;
      // }
      this.MaterialCost = null;
      this.ServiceCost = null;
      $("#addNew").modal("show");
      this.$validator.resume();
    },
    loadTickets() {
      // if (this.$gate.isAdmin()) {
      let pop_loader = this.$loading.show({});
      axios.get("/api/ticket", {
        params: this.search
      }).then(data => {
        this.Tickets = data.data.data;
        this.additionalMore = new Array(this.Tickets.data.length).fill(false);
        this.problemsMore = new Array(this.Tickets.data.length).fill(false);
        pop_loader.hide();
      }).catch(() => {
        pop_loader.hide();
      });
      //   }
    },
    async upload_files(id, isactual = false) {
      let fl = 0;
      if (this.MaterialCost) {
        this.MaterialCost.forEach(file => {
          var fd = new FormData();
          fd.append(`file`, file);
          if (isactual) {
            fd.append(`file_type`, "Actual Estimated Material");
          } else {
            fd.append(`file_type`, "Estimated Material");
          }
          fd.append(`ticket_id`, id);
          axios.post("api/ticket/files", fd).then(res => {
            console.log("gallery uploaded");
          });
        });
      }
      if (this.ServiceCost) {
        this.ServiceCost.forEach(file => {
          var fd = new FormData();
          fd.append(`file`, file);
          if (isactual) {
            fd.append(`file_type`, "Actual Estimated Service");
          } else {
            fd.append(`file_type`, "Estimated Service");
          }
          fd.append(`ticket_id`, id);
          axios.post("api/ticket/files", fd).then(res => {
            console.log("gallery uploaded");
          });
        });
      }
    },
    async upload_stages(id) {
      if (this.stages) {
        this.stages.forEach(stage => {
          var fd = new FormData();
          fd.append(`id`, stage.id);
          fd.append(`stage_no`, stage.stage_no);
          fd.append(`stage_date`, stage.stage_date);
          fd.append(`description`, stage.description);
          //fd.append(`new_file`, stage.new_file);
          // fd.append(`file`, stage.file);
          fd.append(`ticket_id`, id);
          axios.post("api/ticket/stages", fd).then(res => {
            console.log("stages uploaded");
          });
        });
      }
    },
    submitTicket() {
      this.$validator.validateAll().then(async valid => {
        if (valid) {
          let pop_loader = this.$loading.show({
            container: this.$refs.vps_submit_pop
          });
          if (this.form.id) {
            this.form.put("/api/ticket/" + this.form.id).then(response => {
              if (response.data.success) {
                $("#addNew").modal("hide");
                Toast.fire({
                  icon: "success",
                  title: response.data.message
                });
                this.upload_stages(this.form.id);
                this.upload_files(this.form.id);
                this.loadTickets();
              }
              pop_loader.hide();
            }).catch(() => {
              pop_loader.hide();
              if (typeof err.response.data != "undefined") {
                this.$setErrorsFromResponse(err.response.data);
              }
            });
          } else {
            this.form.post("/api/ticket").then(response => {
              if (response.data.success) {
                $("#addNew").modal("hide");
                Toast.fire({
                  icon: "success",
                  title: response.data.message
                });
                this.upload_files(response.data.data.id);
                this.loadTickets();
              }
              pop_loader.hide();
            }).catch(() => {
              pop_loader.hide();
              if (typeof err.response.data != "undefined") {
                this.$setErrorsFromResponse(err.response.data);
              }
            });
          }
        }
      });
    },
    async check_free_service() {
      if (this.selected_machine) {
        if (this.selected_machine.completed_free_service >= this.selected_machine.free_service_no) {
          this.form.service_type = "Paid Service";
          this.form.free_service_no = "";
        } else {
          this.form.free_service_no = this.selected_machine.completed_free_service + 1;
        }
        if (this.selected_machine && this.selected_machine.machine_type == "New" && this.form.service_type == "Free Service") {
          //  this.selected_machine.free_service_no
        }
      }
    },
    async get_machine() {
      axios.get("/api/ticket_machine", {
        params: {
          site_id: this.form.site_id,
          category_id: this.form.category_id,
          sub_category_id: this.form.sub_category_id
        }
      }).then(response => {
        this.machines = response.data.data;
      }).catch(() => console.warn("Oh. Something went wrong"));
    }
  },
  mounted() {},
  created() {
    this.loadTickets();
  },
  beforeCreate() {
    axios.get("api/get_pre_machine").then(res => {
      this.categories = res.data.data.Category;
      this.sites = res.data.data.sites;
    });
    axios.get("/api/initial_ticket").then(response => {
      this.users = response.data.data.vendors;
      this.machines = response.data.data.machines;
      this.search_machines = response.data.data.machines;
      this.search_sites = response.data.data.sites;
    }).catch(() => console.warn("Oh. Something went wrong"));
  },
  watch: {
    "formclose.machine_status"(n) {
      if (n == "Non Repairable") {
        this.formclose.actual_material_cost = 0;
        this.formclose.actual_service_cost = 0;
      } else {
        this.formclose.actual_material_cost = "";
        this.formclose.actual_service_cost = "";
      }
    },
    async "form.sub_category_id"(n, o) {
      if (n) {
        this.get_machine();
      }
    },
    async "form.site_id"(n, o) {
      if (n) {
        this.get_machine();
      }
    },
    "form.category_id": {
      handler: function (n, o) {
        if (n) {
          axios.get("api/category/" + n).then(res => {
            this.sub_categories = res.data.data;
          });
          this.get_machine();
        }
      },
      deep: true,
      initial: true
    },
    stages: {
      handler: function (n, o) {
        if (n && n.length > 0) {
          let la = n[n.length - 1];
          if (la.stage_no) this.last_stage_index = this.opn_stage.indexOf(la.stage_no);
          if (la.stage_date) this.last_stage_date = new Date(la.stage_date).toISOString();
        } else {
          this.last_stage_index = 0;
          if (this.pop_ticket && this.pop_ticket.created_at) {
            this.last_stage_date = new Date(this.pop_ticket.created_at).toISOString();
          } else {
            this.last_stage_date = new Date().toISOString();
          }
        }
      },
      deep: true,
      initial: true
    },
    async "form.maintenance_provider"(n) {
      if (n != "vendor") {
        this.form.service_type = "Paid Service";
      }
      axios.get("api/user/list", {
        params: {
          type: n
        }
      }).then(response => {
        this.users = response.data.data;
      }).catch(() => console.warn("Oh. Something went wrong"));
    },
    async "form.machine_id"(n) {
      this.selected_machine = this.machines.find(x => x.id === n);
      await this.check_free_service();
    },
    async "form.service_type"(n) {
      if (n == "Free Service") {
        await this.check_free_service();
      }
    },
    async "formclose.actual_date"() {
      this.calculate_loss();
    }
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-461a4589\",\"scoped\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/SideBarModal.vue":
/*!************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{"optionsId":"0","vue":true,"id":"data-v-461a4589","scoped":true,"sourceMap":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/SideBarModal.vue ***!
  \************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(true);
// imports


// module
exports.push([module.i, "\n.close[data-v-461a4589]{\n  position: absolute;\n  right: 10px;\n  border: 1px solid black;\n  width: 33px;\n  height: 33px;\n  background: white;\n  border-radius: 50px;\n}\n.sidebar-modal[data-v-461a4589] {\n  padding: 10px 0 10px;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: 400px; /* Adjust as needed */\n  background-color: #fff;\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5);\n  transition: transform 0.3s ease;\n  transform: translateX(100%);\n  z-index: 9999;\n  overflow-y: auto;\n}\n.sidebar-modal.active[data-v-461a4589] {\n  transform: translateX(0);\n}\n.sidebar-content[data-v-461a4589] {\n  height: 100%;\n  overflow-y: auto;\n}\n.sidebar-overlay[data-v-461a4589] {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n", "", {"version":3,"sources":["F:/wamp64/www/rmm/resources/js/components/resources/js/components/SideBarModal.vue"],"names":[],"mappings":";AA8BA;EACA,mBAAA;EACA,YAAA;EACA,wBAAA;EACA,YAAA;EACA,aAAA;EACA,kBAAA;EACA,oBAAA;CACA;AACA;EACA,qBAAA;EACA,gBAAA;EACA,OAAA;EACA,UAAA;EACA,SAAA;EACA,aAAA,CAAA,sBAAA;EACA,uBAAA;EACA,6CAAA;EACA,gCAAA;EACA,4BAAA;EACA,cAAA;EACA,iBAAA;CACA;AAEA;EACA,yBAAA;CACA;AAEA;EACA,aAAA;EACA,iBAAA;CACA;AAEA;EACA,mBAAA;EACA,OAAA;EACA,UAAA;EACA,QAAA;EACA,SAAA;EACA,qCAAA;CACA","file":"SideBarModal.vue","sourcesContent":["<template>\n    <div class=\"sidebar-modal\" :class=\"{ 'active': isOpen }\">\n      <div class=\"container-fluid\">\n        <button class=\"close\" @click=\"closeSideModal\"><i class=\"fa fa-times\" aria-hidden=\"true\" style=\"font-size: 17px;color: black;\"></i></button>\n        <!-- Content of the sidebar modal -->\n        <slot></slot>\n      </div>\n      <div @click=\"closeSideModal\"></div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        isOpen: false,\n      };\n    },\n    methods: {\n        openSideModal() {\n        this.isOpen = true;\n      },\n      closeSideModal() {\n        this.isOpen = false;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .close{\n    position: absolute;\n    right: 10px;\n    border: 1px solid black;\n    width: 33px;\n    height: 33px;\n    background: white;\n    border-radius: 50px;\n  }\n  .sidebar-modal {\n    padding: 10px 0 10px;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    width: 400px; /* Adjust as needed */\n    background-color: #fff;\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.5);\n    transition: transform 0.3s ease;\n    transform: translateX(100%);\n    z-index: 9999;\n    overflow-y: auto;\n  }\n  \n  .sidebar-modal.active {\n    transform: translateX(0);\n  }\n  \n  .sidebar-content {\n    height: 100%;\n    overflow-y: auto;\n  }\n  \n  .sidebar-overlay {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n  </style>"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/Tickets/index.vue":
/*!***************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{"optionsId":"0","vue":true,"scoped":false,"sourceMap":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/Tickets/index.vue ***!
  \***************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(true);
// imports


// module
exports.push([module.i, "\n.bs {\n    border: 1px solid #d2d1d1a8;\n    border-radius: 5px;\n}\n.comma~.comma:not(:empty):before {\n    content: \", \";\n}\n.rmore {\n    color: blue;\n}\n", "", {"version":3,"sources":["F:/wamp64/www/rmm/resources/js/components/Tickets/resources/js/components/Tickets/index.vue"],"names":[],"mappings":";AAw7CA;IACA,4BAAA;IACA,mBAAA;CACA;AAEA;IACA,cAAA;CACA;AAEA;IACA,YAAA;CACA","file":"index.vue","sourcesContent":["<template>\n    <section class=\"content\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            <h3 class=\"card-title\">Ticket List</h3>\n                            <div class=\"card-tools\">\n                                <router-link to=\"/ticket/add\" class=\"btn btn-sm btn-primary\" @click=\"newModal\">\n                                    <i class=\"fa fa-plus-square\"></i>\n                                    Add New\n                                </router-link>\n                                <button class=\"btn btn-sm btn-blue\" @click=\"openSideModal\"><i\n                                        class=\"fa fa-sliders-h mr-2\" aria-hidden=\"true\"></i> Filter</button>\n                            </div>\n                        </div>\n\n\n                        <SidebarModal ref=\"sidebarModal\">\n                            <!-- Content of the sidebar modal goes here -->\n                            <h3><i class=\"fa fa-sliders-h mr-2\" aria-hidden=\"true\" style=\"font-size: 22px;\"></i> Filter\n                            </h3>\n                            <hr>\n                            <form autocomplete=\"off\" @submit.prevent=\"getResults()\" data-vv-scope=\"searchfr\">\n                                <div class=\"row align-items-center\">\n                                    <div class=\"col-auto mb-2\">\n                                        <label for=\"machine_id\">Search Machine</label>\n                                    </div>\n                                    <div class=\"col\">\n                                        <v-select\n                                            id=\"machine_id\"\n                                            label=\"name\"\n                                            :get-option-label=\"getLabel\"\n                                            :reduce=\"(option) => option.id\"\n                                            :options=\"search_machines\"\n                                            placeholder=\"Enter machines ...\"\n                                            v-model=\"search.machine_id\"\n                                            name=\"machine_id\"\n                                        ></v-select>\n                                    </div>\n                                </div>\n                                <div class=\"row align-items-center\">\n                                    <div class=\"col-auto mb-2\">\n                                        <label for=\"machine_id\">Search Ticket</label>\n                                    </div>\n                                    <div class=\"col\">\n                                        <input type=\"text\" placeholder=\"Enter ticket ...\" v-model=\"search.ticket\"\n                                            name=\"ticket\" class=\"form-control\" />\n                                    </div>\n                                </div>\n                                    <div class=\"col-12 mb-2\">\n                                        <v-select label=\"site_name\" :reduce=\"(option) => option.id\"\n                                            :options=\"search_sites\" placeholder=\"Select Site...\"\n                                            v-model=\"search.site_id\" name=\"site_id\">\n                                        </v-select>\n                                    </div>\n                                    <div class=\"col-12 mb-2\">\n                                        <v-select label=\"site_name\" :options=\"['Open', 'Closed']\"\n                                            placeholder=\"Select Status...\" v-model=\"search.status\" name=\"status\">\n                                        </v-select>\n                                    </div>\n                                    <div class=\"col-12 mb-2\">\n                                        <v-select label=\"site_name\" :options=\"['Major', 'Minor']\"\n                                            placeholder=\"Select Complaint Nature...\" v-model=\"search.complaint_nature\"\n                                            name=\"complaint_nature\">\n                                        </v-select>\n                                    </div>\n                                    <div class=\"col-12 mb-2\">\n                                        <v-select label=\"site_name\"\n                                            :options=\"['Breakdown Maintenance', 'Periodic Maintenance']\"\n                                            placeholder=\"Select Ticket Type...\" v-model=\"search.ticket_type\"\n                                            name=\"ticket_type\">\n                                        </v-select>\n                                    </div>\n                                    <div class=\"col-6 mb-2 pr-1\">\n                                        <button type=\"submit\" class=\"btn btn-success btn-block\">Search</button>\n                                    </div>\n                                    <div class=\"col-6 mb-2 pl-1\">\n                                        <button type=\"button\" class=\"btn btn-danger btn-block\"\n                                            @click=\"reset_filter()\">Reset</button>\n                                    </div>\n                                    <div class=\"col-12 mb-2\">\n                                        <download-excel class=\"btn btn-warning btn-block\" :fetch=\"export_csv\"\n                                            :fields=\"json_fields\" :before-generate=\"startDownload\"\n                                            :before-finish=\"finishDownload\" worksheet=\"My Worksheet\" type=\"csv\"\n                                            name=\"ticket_list.csv\">\n                                            <span class=\"labelText\">\n                                                <i class=\"fa fa-file-excel-o\" aria-hidden=\"true\"></i>\n                                                Export as CSV</span>\n                                        </download-excel>\n                                    </div>\n\n\n                                </div>\n                            </form>\n                        </SidebarModal>\n\n\n                        <!-- /.card-header -->\n                        <div class=\"card-body ticketLstTbl table-responsive p-0\">\n                            <table class=\"table table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th>Ticket No</th>\n                                        <th>Ticket Type</th>\n                                        <th>FAR No</th>\n                                        <th>Machine Name</th>\n                                        <th>Machine Model</th>\n                                        <th>Machine SR No</th>\n                                        <th>Machine's Problem</th>\n                                        <th>Additional Problems</th>\n                                        <th>Site</th>\n                                        <th>Complaint Nature</th>\n                                        <th>Created By</th>\n                                        <th>Created Date</th>\n                                        <th>Expected date</th>\n                                        <th>Revised <br> Expected date</th>\n                                        <th>Ticket Status</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for=\"(ticket, index) in Tickets.data\" :key=\"ticket.id\">\n                                        <td>{{ ticket.ticket_no }}</td>\n                                        <td>{{ ticket.ticket_type }}</td>\n                                        <td>{{ ticket.machine.far_no }}</td>\n                                        <td>\n                                            <div class=\"truncate\" :title=\"ticket.machine.name\">\n                                                {{ ticket.machine.name }}\n                                            </div>\n                                        </td>\n                                        <td>{{ (ticket.machine.machine_model ? ticket.machine.machine_model.name : \"-\")\n                                            }}\n                                        </td>\n                                        <td>{{ ticket.machine.machine_sr_no }}</td>\n                                        <td>\n                                            <div class=\"truncate\" :title=\"ticket.problem_description\">\n                                                {{ ticket.problem_description }}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <template v-if=\"ticket.problems && ticket.problems.length > 0\">\n                                                <VueReadMoreSmooth :open.sync=\"additionalMore[x]\" no-button no-shadow>\n                                                    <p v-if=\"ticket.problems\" v-for=\"(item, index) in ticket.problems\"\n                                                        :key=\"'p' + index\" v-html=\"item.problem\"></p>\n                                                </VueReadMoreSmooth>\n                                                <span @click=\"sclick(x)\" class=\"rmore\">...{{ additionalMore[x] ? \"Less\"\n                                    :\n                                    \"More\" }}</span>\n                                            </template>\n                                        </td>\n                                        <td>{{ ticket.site ? ticket.site.site_name : \"-\" }}</td>\n                                        <td>{{ ticket.complaint_nature }}</td>\n                                        <td>{{ ticket.created_by_name }}</td>\n                                        <td>{{ ticket.created_at | myDate }}</td>\n                                        <td>{{ ticket.likely_date | myDate }}</td>\n                                        <td>{{ ticket.reversion_date | myDate }}</td>\n                                        <td>\n                                            {{\n                                    ticket.status.toLowerCase() == \"created by user\"\n                                        ? \"Open\"\n                                        : ticket.status\n                                }}\n                                        </td>\n                                        <td>\n                                            <a href=\"javascript:void(0);\" class=\"btn btn-warning btn-sm\"\n                                                @click=\"viewModal(ticket)\">\n                                                View\n                                            </a>\n                                            <router-link :to=\"'/ticket/edit/' + ticket.id\"\n                                                class=\"btn btn-success btn-sm\"\n                                                v-if=\"ticket.status != 'Closed'\">Edit</router-link>\n                                            <a href=\"javascript:void(0);\" class=\"btn btn-danger btn-sm\"\n                                                @click=\"closeModal(ticket)\" title=\"Close ticket\"\n                                                v-if=\"ticket.status != 'Closed'\">\n                                                Close\n                                            </a>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        <!-- /.card-body -->\n                        <div class=\"card-footer\">\n                            <pagination :data=\"Tickets\" :limit=\"10\" @pagination-change-page=\"getResults\"></pagination>\n                        </div>\n                    </div>\n                    <!-- /.card -->\n                </div>\n            </div>\n        </div>\n\n        <!-- Close Modal -->\n        <div class=\"modal fade\" id=\"closemodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"closemodal\"\n            aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Close Ticket</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n                    <form @submit.prevent=\"submitCloseTicket()\" data-vv-scope=\"closeticket\">\n                        <div class=\"modal-body\">\n                            <div class=\"row\" v-if=\"pop_machine\">\n                                <div class=\"col-sm\">\n                                    <p>\n                                        <strong>Far No :</strong> {{ pop_machine.far_no }}\n                                        <br />\n                                        <strong>Machine Name :</strong> {{ pop_machine.name }}\n                                        <br />\n                                        <strong>Machine Model :</strong>\n                                        {{\n                                    pop_machine.machine_model\n                                        ? pop_machine.machine_model.name\n                                        : \"-\"\n                                }}\n                                        <br />\n                                        <strong>Machine Chassis No :</strong>\n                                        {{ pop_machine.chassis_no }}\n                                    </p>\n                                </div>\n                                <div class=\"col-sm\">\n                                    <p>\n                                        <strong>Machine Sl No:</strong>\n                                        {{ pop_machine.machine_sr_no }}\n                                        <br />\n                                        <strong>Machine Regn No :</strong> {{ pop_machine.regn_no }}\n                                        <br />\n                                        <strong>Machine Engine No :</strong>\n                                        {{ pop_machine.engine_no }}\n                                        <br>\n                                        <strong>Ticket No :</strong> {{ pop_ticket ? pop_ticket.ticket_no : '-' }}\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                {{ verrors.closeticket }}\n                                <div class=\"col-6\" v-if=\"pop_ticket && pop_ticket.likely_date\">\n                                    <div class=\"form-group\">\n                                        <label>Actual Date</label>\n                                        <datetime value-zone=\"Asia/Kolkata\" v-model=\"formclose.actual_date\"\n                                            name=\"actual_date\" input-class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has('closeticket.actual_date'),\n                                }\" v-validate=\"'required'\" data-vv-as=\"Actual Date\" :min-datetime=\"new Date(pop_ticket.created_at).toISOString()\n                                    \" :max-datetime=\"new Date().toISOString()\" />\n                                        <div v-if=\"verrors.has('closeticket.actual_date')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.actual_date\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6\">\n                                    <div class=\"form-group\">\n                                        <label>Machine Status</label>\n                                        <select v-model=\"formclose.machine_status\" name=\"machine_status\"\n                                            class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has('closeticket.machine_status'),\n                                }\" v-validate=\"'required'\" data-vv-as=\"machine status\">\n                                            <option value=\"Running\">Running</option>\n                                            <option value=\"Running with Problem\">\n                                                Running with Problem\n                                            </option>\n                                            <option value=\"Non Repairable\">Non Repairable</option>\n                                        </select>\n                                        <div v-if=\"verrors.has('closeticket.machine_status')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.machine_status\") }}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-2\">\n                                    <div class=\"form-group\">\n                                        <label>Estimated Material cost</label>\n                                        <input type=\"text\" class=\"form-control\" readonly :value=\"pop_ticket.estimated_material_cost +\n                                    pop_ticket.ad_estimated_material_cost +\n                                    '(' +\n                                    pop_ticket.estimated_material_cost +\n                                    '+' +\n                                    pop_ticket.ad_estimated_material_cost +\n                                    ')'\n                                    \" />\n                                    </div>\n                                </div>\n                                <div class=\"col-2\">\n                                    <div class=\"form-group\">\n                                        <label>Actual Material cost</label>\n                                        <input v-model=\"formclose.actual_material_cost\" type=\"text\"\n                                            name=\"actual_material_cost\" v-validate=\"'required'\"\n                                            data-vv-as=\"Actual Material cost\" class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has(\n                                        'closeticket.actual_material_cost'\n                                    ),\n                                }\" :readonly=\"formclose.machine_status == 'Non Repairable'\" />\n                                        <div v-if=\"verrors.has('closeticket.actual_material_cost')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.actual_material_cost\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-2\">\n                                    <div class=\"form-group\">\n                                        <label> Actual Material cost File</label>\n                                        <input type=\"file\" @change=\"uploadMaterialCost\" multiple name=\"material_cost\"\n                                            ref=\"fileactualmaterial\" class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has('closeticket.material_cost'),\n                                }\" v-validate=\"''\" data-vv-as=\"Actual Material cost\" />\n\n                                        <div class=\"clearfix\" v-if=\"pop_ticket.actual_estimated_material_files\">\n                                            <a v-for=\"(\n                          item, x\n                        ) in pop_ticket.actual_estimated_material_files\" :key=\"item.id\" :href=\"item.file\"\n                                                target=\"_blank\">View\n                                                {{\n                                    pop_ticket.actual_estimated_material_files.length > 1\n                                        ? x + 1\n                                        : \"\"\n                                }}</a>\n                                        </div>\n\n                                        <div v-if=\"verrors.has('closeticket.material_cost')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.material_cost\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6\">\n                                    <div class=\"form-group\">\n                                        <label>Material Cost POs</label>\n                                        <v-select v-model=\"formclose.materialPOS\" label=\"Enter PO numbers\" taggable\n                                            multiple></v-select>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-2\">\n                                    <div class=\"form-group\">\n                                        <label>Estimated Service cost</label>\n                                        <input :value=\"pop_ticket.estimated_service_cost +\n                                    pop_ticket.ad_estimated_service_cost +\n                                    '(' +\n                                    pop_ticket.estimated_service_cost +\n                                    '+' +\n                                    pop_ticket.ad_estimated_service_cost +\n                                    ')'\n                                    \" type=\"text\" class=\"form-control\" readonly />\n                                    </div>\n                                </div>\n                                <div class=\"col-2\">\n                                    <div class=\"form-group\">\n                                        <label>Actual Service cost</label>\n                                        <input v-model=\"formclose.actual_service_cost\" type=\"text\"\n                                            name=\"actual_service_cost\" v-validate=\"'required'\"\n                                            data-vv-as=\"Actual Service cost\" class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has(\n                                        'closeticket.actual_service_cost'\n                                    ),\n                                }\" :readonly=\"formclose.machine_status == 'Non Repairable'\" />\n                                        <div v-if=\"verrors.has('closeticket.actual_service_cost')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.actual_service_cost\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-2\">\n                                    <div class=\"form-group\">\n                                        <label> Actual Service cost File </label>\n                                        <input type=\"file\" @change=\"uploadServiceCost\" multiple name=\"service_cost\"\n                                            ref=\"fileactualservice\" class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has('closeticket.service_cost'),\n                                }\" v-validate=\"''\" data-vv-as=\"Actual Service cost\" />\n\n                                        <div class=\"clearfix\" v-if=\"pop_ticket.actual_estimated_service_files\">\n                                            <a v-for=\"(\n                                                    item, x\n                                                    ) in pop_ticket.actual_estimated_service_files\" :key=\"item.id\"\n                                                :href=\"item.file\" target=\"_blank\">View\n                                                {{\n                                    pop_ticket.actual_estimated_service_files.length > 1\n                                        ? x + 1\n                                        : \"\"\n                                }}</a>\n                                        </div>\n\n                                        <div v-if=\"verrors.has('closeticket.service_cost')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.service_cost\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6\">\n                                    <div class=\"form-group\">\n                                        <label>Service Cost POs</label>\n                                        <v-select v-model=\"formclose.servicePOS\" label=\"Enter PO numbers\" taggable\n                                            multiple></v-select>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6\" v-if=\"pop_machine.is_consumtion_hr_run\">\n                                    <div class=\"form-group\">\n                                        <label>Current Run hour </label>\n                                        <input v-model=\"formclose.current_run_hour\" name=\"current_run_hour\"\n                                            class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has(\n                                        'closeticket.current_run_hour'\n                                    ),\n                                }\" v-validate=\"{\n                                    required: true,\n                                    decimal: 2,\n                                    min_value: pop_machine.last_maintenances\n                                        ? pop_machine.last_maintenances.run_hour\n                                        : pop_machine.last_hr_run,\n                                }\" data-vv-as=\"Current Run hour\" />\n                                        <div v-if=\"verrors.has('closeticket.current_run_hour')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.current_run_hour\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6\" v-if=\"pop_machine.is_consumtion_km_run\">\n                                    <div class=\"form-group\">\n                                        <label> Current KM Run </label>\n                                        <input v-model=\"formclose.current_km_run\" name=\"current_km_run\"\n                                            class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has('closeticket.current_km_run'),\n                                }\" v-validate=\"{\n                                    required: true,\n                                    decimal: 2,\n                                    min_value: pop_machine.last_maintenances\n                                        ? pop_machine.last_maintenances.km_run\n                                        : pop_machine.last_km_run,\n                                }\" data-vv-as=\"Current KM hour\" />\n                                        <div v-if=\"verrors.has('closeticket.current_km_run')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.current_km_run\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6\" v-if=\"pop_machine.is_production_fig\">\n                                    <div class=\"form-group\">\n                                        <label> Current Production fig </label>\n                                        <input v-model=\"formclose.current_production_fig\" name=\"current_production_fig\"\n                                            class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has(\n                                        'closeticket.current_production_fig'\n                                    ),\n                                }\" v-validate=\"{\n                                    required: true,\n                                    decimal: 2,\n                                    min_value: pop_machine.last_maintenances\n                                        ? pop_machine.last_maintenances.production_fig\n                                        : pop_machine.periodic_maintenance_breakdown,\n                                }\" data-vv-as=\"Current Production fig\" />\n                                        <div v-if=\"verrors.has('closeticket.current_production_fig')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.current_production_fig\") }}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6\" v-if=\"formclose.ticket_type == 'Breakdown Maintenance'\">\n                                    <div class=\"form-group\">\n                                        <label>Production Loss</label>\n                                        <input v-model=\"formclose.production_loss\" name=\"production_loss\"\n                                            class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has(\n                                        'closeticket.production_loss'\n                                    ),\n                                }\" v-validate=\"'required'\" data-vv-as=\"Production Loss\" readonly />\n                                        <div v-if=\"verrors.has('closeticket.production_loss')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.production_loss\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6\" v-if=\"formclose.ticket_type == 'Breakdown Maintenance'\">\n                                    <div class=\"form-group\">\n                                        <label>Production loss amount</label>\n                                        <input v-model=\"formclose.production_loss_amount\" name=\"production_loss_amount\"\n                                            class=\"form-control\" :class=\"{\n                                    'is-invalid': verrors.has(\n                                        'closeticket.production_loss_amount'\n                                    ),\n                                }\" v-validate=\"'required'\" data-vv-as=\"Current Production fig\" readonly />\n                                        <div v-if=\"verrors.has('closeticket.production_loss_amount')\"\n                                            class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.production_loss_amount\") }}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6\">\n                                    <div class=\"form-group\">\n                                        <label>Root Cause Analysis</label>\n                                        <textarea rows=\"1\" v-model=\"formclose.rca\" name=\"rca\" class=\"form-control\"\n                                            :class=\"{\n                                    'is-invalid': verrors.has('closeticket.rca'),\n                                }\" v-validate=\"'required'\"></textarea>\n                                        <div v-if=\"verrors.has('closeticket.rca')\" class=\"help-block invalid-feedback\">\n                                            {{ verrors.first(\"closeticket.rca\") }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\n                                Close\n                            </button>\n                            <button type=\"submit\" class=\"btn btn-primary\" v-if=\"close_btn\">\n                                Close Ticket\n                            </button>\n                            <button type=\"button\" class=\"btn btn-primary\" v-else>\n                                Processing\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <!--View Modal-->\n        <div class=\"modal fade\" id=\"viewmodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"viewmodal\"\n            aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">View Ticket</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\" v-if=\"pop_ticket\">\n                        <div class=\"row\">\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label>Machine Site</label>\n                                    <v-select label=\"site_name\" :reduce=\"(option) => option.id\" :options=\"sites\"\n                                        placeholder=\"Choose Site ...\" v-model=\"pop_ticket.site_id\" disabled>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label>Machine Category</label>\n                                    <v-select label=\"name\" :reduce=\"(option) => option.id\" :options=\"categories\"\n                                        placeholder=\"Choose Category ...\" v-model=\"pop_ticket.category_id\" disabled>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label>Machine Description</label>\n                                    <v-select label=\"name\" :reduce=\"(option) => option.id\" :options=\"sub_categories\"\n                                        placeholder=\"Choose description ...\" v-model=\"pop_ticket.sub_category_id\"\n                                        name=\"sub_category_id\" :disabled=\"pop_ticket.id != ''\">\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\"> Machine : </label>\n                                    <strong>Far No :</strong> {{ pop_ticket.machine.far_no }}\n                                    <br />\n                                    <strong>Machine Name :</strong> {{ pop_ticket.machine.name }}\n                                    <br />\n                                    <strong>Machine Chassis No :</strong>\n                                    {{ pop_ticket.machine.chassis_no }}\n                                    <br />\n                                    <strong>Machine Sl No:</strong>\n                                    {{ pop_ticket.machine.machine_sr_no }}\n                                    <br />\n                                    <strong>Machine Regn No :</strong>\n                                    {{ pop_ticket.machine.regn_no }}\n                                    <br />\n                                    <strong>Machine Engine No :</strong>\n                                    {{ pop_ticket.machine.engine_no }}\n                                </div>\n                            </div>\n\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group mb-0\" v-if=\"pop_ticket.maintenance_provider == 'vendor' &&\n                                    pop_ticket.service_type\n                                    \">\n                                    <label>Service Type</label>\n                                    {{ pop_ticket.service_type }}\n                                </div>\n\n                                <div class=\"form-group mb-0\" v-if=\"pop_ticket.service_type == 'Free Service' &&\n                                    pop_ticket.free_service_no\n                                    \">\n                                    <label>Free service no:</label>\n                                    {{ pop_ticket.free_service_no }}/{{\n                                    pop_ticket.machine.free_service_no\n                                }}\n                                </div>\n\n                                <div class=\"form-group mb-0\" v-if=\"pop_ticket.ticket_type\">\n                                    <label>Ticket Type</label>\n                                    {{ pop_ticket.ticket_type }}\n                                </div>\n                                <div class=\"form-group mb-0\" v-if=\"pop_ticket.status_during_complaint\">\n                                    <label>Status During Complain: </label>\n                                    {{ pop_ticket.status_during_complaint }}\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Machine's Problem: </label>\n                                    {{ pop_ticket.problem_description }}\n                                </div>\n                            </div>\n\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group mb-0\">\n                                    <label>Maintenance Provider</label>\n                                    {{ pop_ticket.maintenance_provider }}\n                                </div>\n\n                                <div class=\"form-group\">\n                                    <label>\n                                        {{\n                                    pop_ticket.maintenance_provider == \"user\"\n                                        ? \"User\"\n                                        : \"Vendor\"\n                                }}\n                                    </label>\n                                    <template v-if=\"pop_ticket.maintenance_provider == 'vendor'\">\n                                        :\n                                        <span v-for=\"(vendor, index) in pop_ticket.all_vendors\" :key=\"'vm' + index\"\n                                            class=\"comma\">{{ vendor.name }}</span>\n                                        <span class=\"comma\"></span>\n                                    </template>\n                                    <template v-else>\n                                        <v-select label=\"name\" :reduce=\"(option) => option.id\" :options=\"users\"\n                                            placeholder=\"Enter users ...\" v-model=\"pop_ticket.user_id\" disabled>\n                                        </v-select>\n                                    </template>\n                                </div>\n                            </div>\n\n                            <div class=\"col-8 bs\" v-if=\"pop_ticket.stages\">\n                                <label style=\"margin: 0px\">Stages</label>\n                                <template v-for=\"(field, x) in pop_ticket.stages\">\n                                    <div class=\"row\" :key=\"'s' + x\" style=\"border: 0; padding-bottom: 8px\">\n                                        <div class=\"col-4\">\n                                            {{ field.stage_no }}\n                                        </div>\n                                        <div class=\"col-2\">\n                                            {{ field.stage_date | myDate }}\n                                        </div>\n                                        <div class=\"col-5\">\n                                            {{ field.description }}\n                                        </div>\n                                    </div>\n                                </template>\n                            </div>\n\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Machine's Additional Problem: </label><br />\n                                    <p v-if=\"pop_ticket.problems\" v-for=\"(item, index) in pop_ticket.problems\"\n                                        :key=\"'pa' + index\" v-html=\"item.problem\"></p>\n                                </div>\n                            </div>\n\n                            <div class=\"col-3 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Estimated Material cost:</label><br />\n                                    {{\n                                    (pop_ticket.estimated_material_cost +\n                                        pop_ticket.ad_estimated_material_cost)\n                                    | toCurrency\n                                }}\n                                    ({{\n                                        pop_ticket.estimated_material_cost +\n                                        \"+\" +\n                                        pop_ticket.ad_estimated_material_cost\n                                    }})\n                                    <p>\n                                        <a class=\"btn btn-success mr-2\" :href=\"file.file\"\n                                            v-for=\"(file, x) in pop_ticket.estimated_material_files\" :key=\"file.id\"\n                                            target=\"_blank\">View\n                                            {{\n                                    pop_ticket.estimated_material_files.length > 1\n                                        ? x + 1\n                                        : \"\"\n                                }}</a>\n                                    </p>\n                                </div>\n                            </div>\n                            <div class=\"col-3 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Estimated Service cost: </label><br />\n                                    {{\n                                    (pop_ticket.estimated_service_cost +\n                                        pop_ticket.ad_estimated_service_cost)\n                                    | toCurrency\n                                }}\n                                    ({{\n                                        pop_ticket.estimated_service_cost +\n                                        \"+\" +\n                                        pop_ticket.ad_estimated_service_cost\n                                    }})\n                                    <p>\n                                        <a class=\"btn btn-success mr-2\" :href=\"file.file\"\n                                            v-for=\"(file, x) in pop_ticket.estimated_service_files\" :key=\"file.id\"\n                                            target=\"_blank\">View\n                                            {{\n                                    pop_ticket.estimated_service_files.length > 1\n                                        ? x + 1\n                                        : \"\"\n                                }}</a>\n                                    </p>\n                                </div>\n                            </div>\n                            <div class=\"col-3 bs\">\n                                <div class=\"form-group\">\n                                    <label>Actual Material Cost : </label>\n                                    <span v-if=\"pop_ticket.actual_material_cost\">\n                                        {{ pop_ticket.actual_material_cost | toCurrency }}</span>\n                                    <p>\n                                        <a class=\"btn btn-success mr-2\" :href=\"file.file\" v-for=\"(\n                        file, x\n                      ) in pop_ticket.actual_estimated_material_files\" :key=\"file.id\" target=\"_blank\">View\n                                            {{\n                                    pop_ticket.actual_estimated_material_files.length > 1\n                                        ? x + 1\n                                        : \"\"\n                                }}</a>\n                                    </p>\n                                </div>\n                                <div class=\"form-group\" v-if=\"pop_ticket.material_po\">\n                                    <label>Material Cost PO No: </label>\n                                    <span class=\"badge badge-secondary\" v-for=\"(data, x) in pop_ticket.material_po\"\n                                        style=\"margin-right:3px;\">{{ data.name }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"col-3 bs\">\n                                <div class=\"form-group\">\n                                    <label>Actual Service Cost : </label>\n                                    <span v-if=\"pop_ticket.actual_service_cost\">{{\n                                    pop_ticket.actual_service_cost | toCurrency\n                                }}</span>\n                                    <p>\n                                        <a class=\"btn btn-success mr-2\" :href=\"file.file\" v-for=\"(\n                                                file, x\n                                            ) in pop_ticket.actual_estimated_service_files\" :key=\"file.id\"\n                                            target=\"_blank\">View\n                                            {{\n                                    pop_ticket.actual_estimated_service_files.length > 1\n                                        ? x + 1\n                                        : \"\"\n                                }}</a>\n                                    </p>\n                                </div>\n                                <div class=\"form-group\" v-if=\"pop_ticket.service_po\">\n                                    <label>Service Cost PO No: </label>\n                                    <span class=\"badge badge-secondary\" v-for=\"(data, x) in pop_ticket.service_po\"\n                                        style=\"margin-right:3px;\">{{ data.name }}</span>\n                                </div>\n                            </div>\n\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Ticket No : </label>\n                                    {{ pop_ticket.ticket_no }}\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Likely Date : </label>\n                                    {{ pop_ticket.likely_date | myDate }}\n                                </div>\n                            </div>\n\n                            <div class=\"col-4 bs\">\n                                <div class=\"form-group\">\n                                    <label style=\"margin: 0\">Actual Date : </label>\n                                    {{ pop_ticket.actual_date | myDate }}\n                                </div>\n                            </div>\n\n                            <div class=\"col-4 bs\" v-if=\"pop_ticket.current_run_hour\">\n                                <div class=\"form-group\">\n                                    <label>Current Run Hour : </label>\n                                    {{ pop_ticket.current_run_hour }}\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\" v-if=\"pop_ticket.current_km_run\">\n                                <div class=\"form-group\">\n                                    <label>Current KM Hour : </label>\n                                    {{ pop_ticket.current_km_run }}\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\" v-if=\"pop_ticket.current_production_fig\">\n                                <div class=\"form-group\">\n                                    <label>Current Production Fig : </label>\n                                    {{ pop_ticket.current_production_fig }}\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\" v-if=\"pop_ticket.production_loss\">\n                                <div class=\"form-group\">\n                                    <label>Production Loss : </label>\n                                    {{ pop_ticket.production_loss }}\n                                </div>\n                            </div>\n                            <div class=\"col-4 bs\" v-if=\"pop_ticket.production_loss_amount\">\n                                <div class=\"form-group\">\n                                    <label>Production Loss Amount : </label>\n                                    {{ pop_ticket.production_loss_amount | toCurrency }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport VueReadMoreSmooth from \"vue-read-more-smooth\";\nimport SidebarModal from './../SideBarModal.vue';\nexport default {\n    components: { VueReadMoreSmooth, SidebarModal },\n    data() {\n        return {\n            close_btn: true,\n            additionalMore: [],\n            problemsMore: [],\n            search_machines: [],\n            search_sites: [],\n            search: {\n                page: 1,\n                machine_id: \"\",\n                site_id: \"\",\n                complaint_nature: \"\",\n                ticket_type: \"\",\n                ticket: \"\",\n            },\n            popticket: {},\n            categories: [],\n            sub_categories: [],\n            sites: [],\n            selected_machine: \"\",\n            users: [],\n            machines: [],\n            Tickets: {},\n            editmode: false,\n            MaterialCost: null,\n            ServiceCost: null,\n            form: new Form({\n                id: \"\",\n                site_id: \"\",\n                category_id: \"\",\n                sub_category_id: \"\",\n                free_service_no: \"\",\n                ticket_type: \"Periodic Maintenance\",\n                service_type: \"Paid Service\",\n                machine_id: \"\",\n                ticket_no: \"\",\n                vendor_id: \"\",\n                user_id: \"\",\n                likely_date: \"\",\n                estimated_material_cost: \"\",\n                estimated_service_cost: \"\",\n                maintenance_provider: \"vendor\",\n                problem_description: \"\",\n                complaint_nature: \"Major\",\n            }),\n            stages: [\n                {\n                    id: \"\",\n                    stage_no: \"\",\n                    stage_date: \"\",\n                    description: \"\",\n                    file: \"\",\n                    new_file: \"\",\n                },\n            ],\n\n            formclose: new Form({\n                id: \"\",\n                machine_status: \"\",\n                edit_type: \"closeticket\",\n                ticket_type: \"Periodic Maintenance\",\n                actual_date: \"\",\n                actual_material_cost: \"\",\n                actual_service_cost: \"\",\n                current_run_hour: \"\",\n                current_km_run: \"\",\n                current_production_fig: \"\",\n                production_loss: \"\",\n                production_loss_amount: \"\",\n                status: \"Closed\",\n                vendor_resolve_date: \"\",\n                vendor_attain_date: \"\",\n                vendor_response_date: \"\",\n                vendor_call_date: \"\",\n                rca: \"\",\n                materialPOS: \"\",\n                servicePOS: \"\"\n            }),\n            pop_machine: \"\",\n            pop_ticket: \"\",\n            opn_stage: [\n                \"Vendor created\",\n                \"Vendor Assigned\",\n                \"Order issued\",\n                \"Payment under process\",\n                \"Payment Done\",\n                \"Logistics under process\",\n                \"Materials despatched\",\n                \"Material received at site\",\n                \"Maintainace under progress\",\n            ],\n            last_stage_index: 0,\n            last_stage_date: \"\",\n\n            json_fields: {\n                \"Ticket No\": \"ticket_no\",\n                \"Ticket Type\": \"ticket_type\",\n                Machine: {\n                    field: \"machine\",\n                    callback: (val) => {\n                        return val.name + \" - \" + val.far_no;\n                    },\n                },\n                \"Likely Date\": \"likely_date\",\n                \"Reversion Date\": \"reversion_date\",\n                \"Reversion Reason\": \"reversion_reason\",\n                \"Estimated Material Cost\": \"estimated_material_cost\",\n                \"Estimated Service Cost\": \"estimated_service_cost\",\n                \"Actual Date\": \"actual_date\",\n                \"Actual Material Cost\": \"actual_material_cost\",\n                \"Actual Service Cost\": \"actual_service_cost\",\n                \"Status\": \"status\",\n                \"Service Type\": \"service_type\",\n                \"Maintenance Provider\": \"maintenance_provider\",\n                \"Problem Description\": \"problem_description\",\n                \"Complaint Nature\": \"complaint_nature\",\n                \"Status During Complaint\": \"status_during_complaint\",\n            },\n            json_meta: [\n                [\n                    {\n                        key: \"charset\",\n                        value: \"utf-8\",\n                    },\n                ],\n            ],\n        };\n    },\n    methods: {\n        openSideModal() {\n            this.$refs.sidebarModal.openSideModal();\n        },\n        closeSideModal() {\n            this.$refs.sidebarModal.closeSideModal();\n        },\n        async reset_filter() {\n            this.search = {\n                page: 1,\n                machine_id: \"\",\n                site_id: \"\",\n                complaint_nature: \"\",\n                ticket_type: \"\",\n                ticket: \"\",\n            }\n        },\n        async export_csv() {\n            const response = await axios.get(\"api/ticket?export=1\", {\n                params: {\n                    search: this.search,\n                },\n            });\n            return response.data.data;\n        },\n        startDownload() {\n            Swal.fire({\n                title: \"Please Wait !\",\n                html: \"Data populating\", // add html attribute if you want or remove\n                allowOutsideClick: false,\n                onBeforeOpen: () => {\n                    Swal.showLoading();\n                },\n            });\n        },\n        finishDownload() {\n            Swal.close();\n        },\n        sclick(x, p = \"\") {\n            if (p) {\n                let a = this.problemsMore[x] ? false : true;\n                this.$set(this.problemsMore, x, a);\n            } else {\n                let a = this.additionalMore[x] ? false : true;\n                this.$set(this.additionalMore, x, a);\n            }\n        },\n        getLabel(val) {\n            if (typeof val === \"object\") {\n                return val.far_no + \" - \" + val.name;\n            } else {\n                return val;\n            }\n        },\n        viewModal(ticket) {\n            this.pop_ticket = \"\";\n\n            axios\n                .get(\"api/ticket/\" + ticket.id)\n                .then((res) => {\n                    this.pop_ticket = res.data.data;\n                })\n                .catch((err) => {\n                    this.pop_ticket = ticket;\n                });\n\n            axios.get(\"api/category/\" + ticket.category_id).then((res) => {\n                this.sub_categories = res.data.data;\n            });\n            $(\"#viewmodal\").modal(\"show\");\n        },\n        AddStage() {\n            this.stages.push({\n                id: \"\",\n                stage_no: \"\",\n                stage_date: \"\",\n                description: \"\",\n                file: \"\",\n                new_file: \"\",\n            });\n        },\n        async choose_stage_file(event, x) {\n            this.stages[x].new_file = event.target.files[0];\n        },\n\n        async uploadMaterialCost(event) {\n            this.MaterialCost = event.target.files;\n        },\n        async uploadServiceCost(event) {\n            this.ServiceCost = event.target.files;\n        },\n\n        getResults(page = 1) {\n            this.$Progress.start();\n            this.search.page = page;\n            axios\n                .get(\"/api/ticket\", {\n                    params: this.search,\n                })\n                .then((data) => {\n                    this.Tickets = data.data.data;\n                    this.additionalMore = new Array(this.Tickets.data.length).fill(false);\n                    this.problemsMore = new Array(this.Tickets.data.length).fill(false);\n                });\n            this.$Progress.finish();\n        },\n\n        calculate_loss() {\n            if (this.formclose.actual_date && this.pop_ticket.created_at) {\n                let a = new Date(this.formclose.actual_date).toISOString();\n                let b = new Date(this.pop_ticket.created_at).toISOString();\n                const dateB = moment(a);\n                const dateC = moment(b);\n\n\n                var Diff = dateB.diff(dateC, 'days') + 1;\n\n                let hrs = this.pop_machine.prdloss_hrs\n                let rate = this.pop_machine.prdloss_hr_rate\n                let tloss = (Diff * hrs);\n                this.formclose.production_loss_amount = (tloss * rate)\n                this.formclose.production_loss = tloss\n\n\n                console.log(hrs, rate, Diff);\n\n\n            }\n\n        },\n        submitCloseTicket() {\n            this.$forceUpdate();\n            this.$validator.validateAll(\"closeticket\").then(async (valid) => {\n                if (valid) {\n                    let pop_loader = this.$loading.show({});\n                    let last_mDate = this.pop_machine.last_maintenances\n                        ? this.pop_machine.last_maintenances.datetime\n                        : this.pop_machine.last_maintenance_date;\n\n                    if (\n                        last_mDate &&\n                        this.formclose.actual_date &&\n                        Date.parse(\n                            moment(this.formclose.actual_date).format(\"MMM,DD YYYY\")\n                        ) < Date.parse(moment(last_mDate).format(\"MMM,DD YYYY\"))\n                    ) {\n                        pop_loader.hide();\n                        Swal.fire(\n                            \"You can not add previous date's data, Please remove record from maintenance list.\",\n                            \"\",\n                            \"warning\"\n                        );\n                    } else {\n                        this.close_btn = false;\n                        this.formclose\n                            .put(\"/api/ticket/\" + this.formclose.id)\n                            .then((response) => {\n                                if (response.data.success) {\n                                    $(\"#closemodal\").modal(\"hide\");\n                                    Toast.fire({\n                                        icon: \"success\",\n                                        title: response.data.message,\n                                    });\n                                    this.upload_files(this.formclose.id, \"actual\");\n                                    this.$validator.reset();\n                                    this.formclose.reset();\n                                    this.loadTickets();\n                                }\n                                this.close_btn = true;\n                                pop_loader.hide();\n                            })\n                            .catch(() => {\n                                this.close_btn = true;\n                                pop_loader.hide();\n                                if (typeof err.response.data != \"undefined\") {\n                                    this.$setErrorsFromResponse(err.response.data);\n                                }\n                            });\n                    }\n                }\n            });\n        },\n\n        closeModal(ticket) {\n            this.$validator.pause();\n            $(\"#closemodal\").modal(\"show\");\n            this.$validator.reset();\n            this.formclose.reset();\n            this.$refs.fileactualservice.value = null;\n            this.$refs.fileactualmaterial.value = null;\n            this.pop_ticket = ticket;\n            this.pop_machine = ticket.machine;\n            this.formclose.fill(ticket);\n            this.formclose.edit_type = \"closeticket\";\n            this.$validator.resume();\n        },\n        editModal(ticket) {\n            this.editmode = true;\n            this.$validator.pause();\n            this.form.reset();\n            this.pop_ticket = ticket;\n            // if (this.$gate.isAdmin()) {\n            this.$refs.fileservice.value = null;\n            this.$refs.filematerial.value = null;\n            // }\n            this.MaterialCost = null;\n            this.ServiceCost = null;\n            $(\"#addNew\").modal(\"show\");\n            this.form.fill(ticket);\n            this.form.likely_date = ticket.likely_date\n                ? new Date(ticket.likely_date).toISOString()\n                : \"\";\n            this.stages = [];\n            if (ticket.stages && ticket.stages.length > 0) {\n                this.stages = ticket.stages;\n            }\n            this.$validator.resume();\n        },\n        newModal() {\n            this.stages = [];\n            this.AddStage();\n            this.editmode = false;\n            this.$validator.reset();\n            this.$validator.pause();\n            this.form.reset();\n            // if (this.$gate.isAdmin()) {\n            this.$refs.fileservice.value = null;\n            this.$refs.filematerial.value = null;\n            // }\n            this.MaterialCost = null;\n            this.ServiceCost = null;\n            $(\"#addNew\").modal(\"show\");\n            this.$validator.resume();\n        },\n\n        loadTickets() {\n            // if (this.$gate.isAdmin()) {\n            let pop_loader = this.$loading.show({});\n            axios\n                .get(\"/api/ticket\", {\n                    params: this.search,\n                })\n                .then((data) => {\n                    this.Tickets = data.data.data;\n                    this.additionalMore = new Array(this.Tickets.data.length).fill(false);\n                    this.problemsMore = new Array(this.Tickets.data.length).fill(false);\n                    pop_loader.hide();\n                })\n                .catch(() => {\n                    pop_loader.hide();\n                });\n            //   }\n        },\n\n        async upload_files(id, isactual = false) {\n            let fl = 0;\n            if (this.MaterialCost) {\n                this.MaterialCost.forEach((file) => {\n                    var fd = new FormData();\n                    fd.append(`file`, file);\n                    if (isactual) {\n                        fd.append(`file_type`, \"Actual Estimated Material\");\n                    } else {\n                        fd.append(`file_type`, \"Estimated Material\");\n                    }\n                    fd.append(`ticket_id`, id);\n                    axios.post(\"api/ticket/files\", fd).then((res) => {\n                        console.log(\"gallery uploaded\");\n                    });\n                });\n            }\n            if (this.ServiceCost) {\n                this.ServiceCost.forEach((file) => {\n                    var fd = new FormData();\n                    fd.append(`file`, file);\n                    if (isactual) {\n                        fd.append(`file_type`, \"Actual Estimated Service\");\n                    } else {\n                        fd.append(`file_type`, \"Estimated Service\");\n                    }\n                    fd.append(`ticket_id`, id);\n                    axios.post(\"api/ticket/files\", fd).then((res) => {\n                        console.log(\"gallery uploaded\");\n                    });\n                });\n            }\n        },\n\n        async upload_stages(id) {\n            if (this.stages) {\n                this.stages.forEach((stage) => {\n                    var fd = new FormData();\n                    fd.append(`id`, stage.id);\n                    fd.append(`stage_no`, stage.stage_no);\n                    fd.append(`stage_date`, stage.stage_date);\n                    fd.append(`description`, stage.description);\n                    //fd.append(`new_file`, stage.new_file);\n                    // fd.append(`file`, stage.file);\n                    fd.append(`ticket_id`, id);\n                    axios.post(\"api/ticket/stages\", fd).then((res) => {\n                        console.log(\"stages uploaded\");\n                    });\n                });\n            }\n        },\n\n        submitTicket() {\n            this.$validator.validateAll().then(async (valid) => {\n                if (valid) {\n                    let pop_loader = this.$loading.show({\n                        container: this.$refs.vps_submit_pop,\n                    });\n                    if (this.form.id) {\n                        this.form\n                            .put(\"/api/ticket/\" + this.form.id)\n                            .then((response) => {\n                                if (response.data.success) {\n                                    $(\"#addNew\").modal(\"hide\");\n                                    Toast.fire({\n                                        icon: \"success\",\n                                        title: response.data.message,\n                                    });\n                                    this.upload_stages(this.form.id);\n                                    this.upload_files(this.form.id);\n                                    this.loadTickets();\n                                }\n                                pop_loader.hide();\n                            })\n                            .catch(() => {\n                                pop_loader.hide();\n                                if (typeof err.response.data != \"undefined\") {\n                                    this.$setErrorsFromResponse(err.response.data);\n                                }\n                            });\n                    } else {\n                        this.form\n                            .post(\"/api/ticket\")\n                            .then((response) => {\n                                if (response.data.success) {\n                                    $(\"#addNew\").modal(\"hide\");\n                                    Toast.fire({\n                                        icon: \"success\",\n                                        title: response.data.message,\n                                    });\n\n                                    this.upload_files(response.data.data.id);\n                                    this.loadTickets();\n                                }\n                                pop_loader.hide();\n                            })\n                            .catch(() => {\n                                pop_loader.hide();\n                                if (typeof err.response.data != \"undefined\") {\n                                    this.$setErrorsFromResponse(err.response.data);\n                                }\n                            });\n                    }\n                }\n            });\n        },\n\n        async check_free_service() {\n            if (this.selected_machine) {\n                if (\n                    this.selected_machine.completed_free_service >=\n                    this.selected_machine.free_service_no\n                ) {\n                    this.form.service_type = \"Paid Service\";\n                    this.form.free_service_no = \"\";\n                } else {\n                    this.form.free_service_no =\n                        this.selected_machine.completed_free_service + 1;\n                }\n\n                if (\n                    this.selected_machine &&\n                    this.selected_machine.machine_type == \"New\" &&\n                    this.form.service_type == \"Free Service\"\n                ) {\n                    //  this.selected_machine.free_service_no\n                }\n            }\n        },\n\n        async get_machine() {\n            axios\n                .get(\"/api/ticket_machine\", {\n                    params: {\n                        site_id: this.form.site_id,\n                        category_id: this.form.category_id,\n                        sub_category_id: this.form.sub_category_id,\n                    },\n                })\n                .then((response) => {\n                    this.machines = response.data.data;\n                })\n                .catch(() => console.warn(\"Oh. Something went wrong\"));\n        },\n    },\n    mounted() { },\n    created() {\n        this.loadTickets();\n    },\n    beforeCreate() {\n        axios.get(\"api/get_pre_machine\").then((res) => {\n            this.categories = res.data.data.Category;\n            this.sites = res.data.data.sites;\n        });\n        axios\n            .get(\"/api/initial_ticket\")\n            .then((response) => {\n                this.users = response.data.data.vendors;\n                this.machines = response.data.data.machines;\n                this.search_machines = response.data.data.machines;\n                this.search_sites = response.data.data.sites;\n            })\n            .catch(() => console.warn(\"Oh. Something went wrong\"));\n    },\n    watch: {\n        \"formclose.machine_status\"(n) {\n            if (n == \"Non Repairable\") {\n                this.formclose.actual_material_cost = 0;\n                this.formclose.actual_service_cost = 0;\n            } else {\n                this.formclose.actual_material_cost = \"\";\n                this.formclose.actual_service_cost = \"\";\n            }\n        },\n        async \"form.sub_category_id\"(n, o) {\n            if (n) {\n                this.get_machine();\n            }\n        },\n        async \"form.site_id\"(n, o) {\n            if (n) {\n                this.get_machine();\n            }\n        },\n\n        \"form.category_id\": {\n            handler: function (n, o) {\n                if (n) {\n                    axios.get(\"api/category/\" + n).then((res) => {\n                        this.sub_categories = res.data.data;\n                    });\n                    this.get_machine();\n                }\n            },\n            deep: true,\n            initial: true,\n        },\n        stages: {\n            handler: function (n, o) {\n                if (n && n.length > 0) {\n                    let la = n[n.length - 1];\n                    if (la.stage_no)\n                        this.last_stage_index = this.opn_stage.indexOf(la.stage_no);\n                    if (la.stage_date)\n                        this.last_stage_date = new Date(la.stage_date).toISOString();\n                } else {\n                    this.last_stage_index = 0;\n                    if (this.pop_ticket && this.pop_ticket.created_at) {\n                        this.last_stage_date = new Date(\n                            this.pop_ticket.created_at\n                        ).toISOString();\n                    } else {\n                        this.last_stage_date = new Date().toISOString();\n                    }\n                }\n            },\n            deep: true,\n            initial: true,\n        },\n\n        async \"form.maintenance_provider\"(n) {\n            if (n != \"vendor\") {\n                this.form.service_type = \"Paid Service\";\n            }\n            axios\n                .get(\"api/user/list\", {\n                    params: {\n                        type: n,\n                    },\n                })\n                .then((response) => {\n                    this.users = response.data.data;\n                })\n                .catch(() => console.warn(\"Oh. Something went wrong\"));\n        },\n\n        async \"form.machine_id\"(n) {\n            this.selected_machine = this.machines.find((x) => x.id === n);\n            await this.check_free_service();\n        },\n        async \"form.service_type\"(n) {\n            if (n == \"Free Service\") {\n                await this.check_free_service();\n            }\n        },\n        async \"formclose.actual_date\"() {\n            this.calculate_loss();\n        }\n    },\n};\n</script>\n<style>\n.bs {\n    border: 1px solid #d2d1d1a8;\n    border-radius: 5px;\n}\n\n.comma~.comma:not(:empty):before {\n    content: \", \";\n}\n\n.rmore {\n    color: blue;\n}\n</style>\n"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-0341cdd6\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/js/components/Tickets/index.vue":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0341cdd6","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/js/components/Tickets/index.vue ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {}
var staticRenderFns = []
if (false) {}

/***/ }),

/***/ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-461a4589\",\"hasScoped\":true,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/js/components/SideBarModal.vue":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-461a4589","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/js/components/SideBarModal.vue ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "sidebar-modal", class: { active: _vm.isOpen } },
    [
      _c(
        "div",
        { staticClass: "container-fluid" },
        [
          _c(
            "button",
            { staticClass: "close", on: { click: _vm.closeSideModal } },
            [
              _c("i", {
                staticClass: "fa fa-times",
                staticStyle: { "font-size": "17px", color: "black" },
                attrs: { "aria-hidden": "true" }
              })
            ]
          ),
          _vm._v(" "),
          _vm._t("default")
        ],
        2
      ),
      _vm._v(" "),
      _c("div", { on: { click: _vm.closeSideModal } })
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

if (false) {}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-461a4589\",\"scoped\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/SideBarModal.vue":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-style-loader!./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{"optionsId":"0","vue":true,"id":"data-v-461a4589","scoped":true,"sourceMap":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/SideBarModal.vue ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../node_modules/css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler?{"optionsId":"0","vue":true,"id":"data-v-461a4589","scoped":true,"sourceMap":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./SideBarModal.vue */ "./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-461a4589\",\"scoped\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/SideBarModal.vue");
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(/*! ../../../node_modules/vue-style-loader/lib/addStylesClient.js */ "./node_modules/vue-style-loader/lib/addStylesClient.js").default
var update = add("a07738d4", content, false, {});
// Hot Module Replacement
if(false) {}

/***/ }),

/***/ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/Tickets/index.vue":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-style-loader!./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{"optionsId":"0","vue":true,"scoped":false,"sourceMap":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/Tickets/index.vue ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(/*! !../../../../node_modules/css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler?{"optionsId":"0","vue":true,"scoped":false,"sourceMap":true}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue */ "./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/Tickets/index.vue");
if(content.__esModule) content = content.default;
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__(/*! ../../../../node_modules/vue-style-loader/lib/addStylesClient.js */ "./node_modules/vue-style-loader/lib/addStylesClient.js").default
var update = add("7566948f", content, false, {});
// Hot Module Replacement
if(false) {}

/***/ }),

/***/ "./resources/js/components/SideBarModal.vue":
/*!**************************************************!*\
  !*** ./resources/js/components/SideBarModal.vue ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SideBarModal_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SideBarModal.vue */ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/js/components/SideBarModal.vue");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_template_compiler_index_id_data_v_461a4589_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SideBarModal_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/template-compiler/index?{"id":"data-v-461a4589","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SideBarModal.vue */ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-461a4589\",\"hasScoped\":true,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/js/components/SideBarModal.vue");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../node_modules/vue-loader/lib/runtime/component-normalizer */ "./node_modules/vue-loader/lib/runtime/component-normalizer.js");
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(/*! !vue-style-loader!css-loader?sourceMap!../../../node_modules/vue-loader/lib/style-compiler/index?{"optionsId":"0","vue":true,"id":"data-v-461a4589","scoped":true,"sourceMap":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SideBarModal.vue */ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"id\":\"data-v-461a4589\",\"scoped\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/SideBarModal.vue")
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-461a4589"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SideBarModal_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
  _node_modules_vue_loader_lib_template_compiler_index_id_data_v_461a4589_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SideBarModal_vue__WEBPACK_IMPORTED_MODULE_1__["render"],
  _node_modules_vue_loader_lib_template_compiler_index_id_data_v_461a4589_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_SideBarModal_vue__WEBPACK_IMPORTED_MODULE_1__["staticRenderFns"],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\js\\components\\SideBarModal.vue"

/* hot reload */
if (false) {}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),

/***/ "./resources/js/components/Tickets/index.vue":
/*!***************************************************!*\
  !*** ./resources/js/components/Tickets/index.vue ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue */ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./resources/js/components/Tickets/index.vue");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_template_compiler_index_id_data_v_0341cdd6_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/vue-loader/lib/template-compiler/index?{"id":"data-v-0341cdd6","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue */ "./node_modules/vue-loader/lib/template-compiler/index.js?{\"id\":\"data-v-0341cdd6\",\"hasScoped\":false,\"optionsId\":\"0\",\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/js/components/Tickets/index.vue");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/component-normalizer */ "./node_modules/vue-loader/lib/runtime/component-normalizer.js");
var disposed = false
function injectStyle (context) {
  if (disposed) return
  __webpack_require__(/*! !vue-style-loader!css-loader?sourceMap!../../../../node_modules/vue-loader/lib/style-compiler/index?{"optionsId":"0","vue":true,"scoped":false,"sourceMap":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue */ "./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?sourceMap!./node_modules/vue-loader/lib/style-compiler/index.js?{\"optionsId\":\"0\",\"vue\":true,\"scoped\":false,\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./resources/js/components/Tickets/index.vue")
}
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null

var Component = Object(_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
  _node_modules_vue_loader_lib_template_compiler_index_id_data_v_0341cdd6_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__WEBPACK_IMPORTED_MODULE_1__["render"],
  _node_modules_vue_loader_lib_template_compiler_index_id_data_v_0341cdd6_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__WEBPACK_IMPORTED_MODULE_1__["staticRenderFns"],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "resources\\js\\components\\Tickets\\index.vue"

/* hot reload */
if (false) {}

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,