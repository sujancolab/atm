(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[5],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/Dashboard/index.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/Dashboard/index.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ "./node_modules/vuex/dist/vuex.esm.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


/* harmony default export */ __webpack_exports__["default"] = ({
  mounted: function mounted() {
    console.log("Component mounted.");
  },
  data: function data() {
    return {
      current_date: moment(new Date()).format("dddd, Do MMMM YYYY")
    };
  },
  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_0__["mapGetters"])("auth", ["user"]))
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/Dashboard/index.vue?vue&type=template&id=5574027c&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/components/Dashboard/index.vue?vue&type=template&id=5574027c& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function render() {
  var _vm = this,
      _c = _vm._self._c;

  return _c("main", [_c("section", {
    staticClass: "content-header"
  }, [_vm.user ? _c("h1", [_vm._v("Welcome back, "), _c("span", {
    domProps: {
      textContent: _vm._s(_vm.user.name)
    }
  }), _vm._v("!")]) : _vm._e(), _vm._v(" "), _c("p", [_vm._v("Today is " + _vm._s(_vm.current_date))])]), _vm._v(" "), _c("section", {
    staticClass: "content"
  }, [_c("div", {
    staticClass: "row"
  }, [_vm.can("Users Tile") ? _c("div", {
    staticClass: "col-xs-12 col-sm-6 col-md-6 col-lg-3"
  }, [_vm._m(0)]) : _vm._e(), _vm._v(" "), _vm.can("Quote Tile") ? _c("div", {
    staticClass: "col-xs-12 col-sm-6 col-md-6 col-lg-3"
  }, [_vm._m(1)]) : _vm._e(), _vm._v(" "), _vm.can("Task Tile") ? _c("div", {
    staticClass: "col-xs-12 col-sm-6 col-md-6 col-lg-3"
  }, [_vm._m(2)]) : _vm._e(), _vm._v(" "), _vm.can("Query Tile") ? _c("div", {
    staticClass: "col-xs-12 col-sm-6 col-md-6 col-lg-3"
  }, [_vm._m(3)]) : _vm._e()]), _vm._v(" "), _vm.can("User Traffic Graph") ? _c("div", {
    staticClass: "card box-primary"
  }, [_vm._m(4), _vm._v(" "), _vm._m(5)]) : _vm._e(), _vm._v(" "), _vm.can("Log History") ? _c("div", {
    staticClass: "card box-success"
  }, [_vm._m(6), _vm._v(" "), _vm._m(7)]) : _vm._e()])]);
};

var staticRenderFns = [function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "small-box card info-box1"
  }, [_c("div", {
    staticClass: "inner"
  }, [_c("div", {
    staticClass: "info-box-content"
  }, [_c("h5", [_vm._v("Users")]), _vm._v(" "), _c("h3", [_vm._v("1438")])]), _vm._v(" "), _c("div", {
    staticClass: "info-box-icon"
  }, [_c("i", {
    staticClass: "fa fa-user-plus",
    attrs: {
      "aria-hidden": "true"
    }
  })])])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "small-box card info-box2"
  }, [_c("div", {
    staticClass: "inner"
  }, [_c("div", {
    staticClass: "info-box-content"
  }, [_c("h5", [_vm._v("Open Invoices")]), _vm._v(" "), _c("h3", [_vm._v("75")])]), _vm._v(" "), _c("div", {
    staticClass: "info-box-icon"
  }, [_c("i", {
    staticClass: "fa fa-money",
    attrs: {
      "aria-hidden": "true"
    }
  })])])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "small-box card info-box3"
  }, [_c("div", {
    staticClass: "inner"
  }, [_c("div", {
    staticClass: "info-box-content"
  }, [_c("h5", [_vm._v("Open Tasks")]), _vm._v(" "), _c("h3", [_vm._v("15")])]), _vm._v(" "), _c("div", {
    staticClass: "info-box-icon"
  }, [_c("i", {
    staticClass: "fa fa-tasks",
    attrs: {
      "aria-hidden": "true"
    }
  })])])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "small-box card info-box4"
  }, [_c("div", {
    staticClass: "inner"
  }, [_c("div", {
    staticClass: "info-box-content"
  }, [_c("h5", [_vm._v("New Issues")]), _vm._v(" "), _c("h3", [_vm._v("30")])]), _vm._v(" "), _c("div", {
    staticClass: "info-box-icon"
  }, [_c("i", {
    staticClass: "fa fa-exclamation-triangle",
    attrs: {
      "aria-hidden": "true"
    }
  })])])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "box-header with-border bor"
  }, [_c("h3", {
    staticClass: "box-title card-text"
  }, [_vm._v("User Traffic")])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "box-body"
  }, [_c("img", {
    attrs: {
      src: "images/Untitled-1.jpg",
      alt: "",
      width: "100%"
    }
  })]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "box-header with-border bor"
  }, [_c("h3", {
    staticClass: "box-title card-text"
  }, [_vm._v("Log History")])]);
}, function () {
  var _vm = this,
      _c = _vm._self._c;

  return _c("div", {
    staticClass: "box-body"
  }, [_c("div", {
    staticClass: "tablesection"
  }, [_c("div", {
    staticClass: "table-responsive"
  }, [_c("table", {
    staticClass: "table table-striped table-hover"
  }, [_c("thead", [_c("tr", [_c("th", {
    staticStyle: {
      "text-align": "center"
    },
    attrs: {
      width: "70"
    }
  }, [_vm._v("\n                                        Sl No.\n                                    ")]), _vm._v(" "), _c("th", [_vm._v("Name")]), _vm._v(" "), _c("th", [_vm._v("Title")]), _vm._v(" "), _c("th", [_vm._v("Company")]), _vm._v(" "), _c("th", [_vm._v("Session Duration")]), _vm._v(" "), _c("th", [_vm._v("Last Seen")])])]), _vm._v(" "), _c("tbody", [_c("tr", [_c("td", {
    attrs: {
      align: "center"
    }
  }, [_vm._v("01")]), _vm._v(" "), _c("td", [_vm._v("Donna Nichols")]), _vm._v(" "), _c("td", [_vm._v("Regional Manager")]), _vm._v(" "), _c("td", [_vm._v("Greenway Metal Recycling Inc.")]), _vm._v(" "), _c("td", [_vm._v("30 min 12 sec")]), _vm._v(" "), _c("td", [_vm._v("05-13-2022 at 7:30 AM")])]), _vm._v(" "), _c("tr", [_c("td", {
    attrs: {
      align: "center"
    }
  }, [_vm._v("02")]), _vm._v(" "), _c("td", [_vm._v("Rose Marshall")]), _vm._v(" "), _c("td", [_vm._v("General Manager")]), _vm._v(" "), _c("td", [_vm._v("South Chicago Iron & Metal")]), _vm._v(" "), _c("td", [_vm._v("1 hr 25 min 34 sec")]), _vm._v(" "), _c("td", [_vm._v("05-12-2022 at 7:30 PM")])]), _vm._v(" "), _c("tr", [_c("td", {
    attrs: {
      align: "center"
    }
  }, [_vm._v("03")]), _vm._v(" "), _c("td", [_vm._v("Diana Grant")]), _vm._v(" "), _c("td", [_vm._v("Sales Manager")]), _vm._v(" "), _c("td", [_vm._v("Sims Metal")]), _vm._v(" "), _c("td", [_vm._v("03 min 12 sec")]), _vm._v(" "), _c("td", [_vm._v("05-12-2022 at 5:21 PM")])]), _vm._v(" "), _c("tr", [_c("td", {
    attrs: {
      align: "center"
    }
  }, [_vm._v("04")]), _vm._v(" "), _c("td", [_vm._v("Scott Perkins")]), _vm._v(" "), _c("td", [_vm._v("Account Officer")]), _vm._v(" "), _c("td", [_vm._v("J&S Metals")]), _vm._v(" "), _c("td", [_vm._v("5 hr 25 min 34 sec")]), _vm._v(" "), _c("td", [_vm._v("05-12-2022 at 3:47 PM")])]), _vm._v(" "), _c("tr", [_c("td", {
    attrs: {
      align: "center"
    }
  }, [_vm._v("05")]), _vm._v(" "), _c("td", [_vm._v("Carlos Beltran")]), _vm._v(" "), _c("td", [_vm._v("Regional Manager")]), _vm._v(" "), _c("td", [_vm._v("Windy City Iron & Metal")]), _vm._v(" "), _c("td", [_vm._v("25 min 12 sec")]), _vm._v(" "), _c("td", [_vm._v("05-12-2022 at 1:38 PM")])])]), _vm._v(" "), _c("tfoot", [_c("tr", [_c("td", {
    attrs: {
      align: "right",
      colspan: "6"
    }
  }, [_c("a", {
    staticClass: "label label-success",
    attrs: {
      href: "#"
    }
  }, [_vm._v("more...")])])])])])])])]);
}];
render._withStripped = true;


/***/ }),

/***/ "./resources/js/components/Dashboard/index.vue":
/*!*****************************************************!*\
  !*** ./resources/js/components/Dashboard/index.vue ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_vue_vue_type_template_id_5574027c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=5574027c& */ "./resources/js/components/Dashboard/index.vue?vue&type=template&id=5574027c&");
/* harmony import */ var _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js& */ "./resources/js/components/Dashboard/index.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _index_vue_vue_type_template_id_5574027c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _index_vue_vue_type_template_id_5574027c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "resources/js/components/Dashboard/index.vue"
/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./resources/js/components/Dashboard/index.vue?vue&type=script&lang=js&":
/*!******************************************************************************!*\
  !*** ./resources/js/components/Dashboard/index.vue?vue&type=script&lang=js& ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/Dashboard/index.vue?vue&type=script&lang=js&");
/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__["default"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./resources/js/components/Dashboard/index.vue?vue&type=template&id=5574027c&":
/*!************************************************************************************!*\
  !*** ./resources/js/components/Dashboard/index.vue?vue&type=template&id=5574027c& ***!
  \************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_5574027c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=5574027c& */ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/components/Dashboard/index.vue?vue&type=template&id=5574027c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_5574027c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_5574027c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,