{"version":3,"sources":["webpack:///resources/js/components/Tickets/Report.vue","webpack:///./resources/js/components/Tickets/Report.vue","webpack:///./resources/js/components/Tickets/Report.vue?1a98"],"names":["components","VueTagsInput","data","search_machines","search_sites","search","page","machine_id","site_id","popticket","categories","sub_categories","sites","selected_machine","users","machines","Tickets","editmode","MaterialCost","ServiceCost","form","id","category_id","sub_category_id","free_service_no","ticket_type","service_type","ticket_no","vendor_id","user_id","likely_date","estimated_material_cost","estimated_service_cost","maintenance_provider","problem_description","complaint_nature","stages","stage_no","stage_date","description","file","new_file","formclose","machine_status","edit_type","actual_date","actual_material_cost","actual_service_cost","current_run_hour","current_km_run","current_production_fig","production_loss","production_loss_amount","status","vendor_resolve_date","vendor_attain_date","vendor_response_date","vendor_call_date","pop_machine","pop_ticket","opn_stage","last_stage_index","last_stage_date","methods","getLabel","viewModal","$","AddStage","getResults","axios","params","then","submitCloseTicket","container","response","Toast","icon","title","pop_loader","catch","closeModal","editModal","newModal","loadTickets","fd","console","submitTicket","mounted","created","beforeCreate","res","watch","handler","deep","initial","type","Component","_vm","this","_h","$createElement","_c","_self","staticClass","$gate","isAdmin","_v","attrs","on","$event","preventDefault","option","model","value","callback","$$v","$set","expression","_m","_l","ticket","key","_s","machine","name","far_no","created_by_name","_f","created_at","domProps","_e"],"mappings":"0HAoGe,KACfA,YACAC,kBAEAC,UACA,CACAC,mBACAC,gBACAC,QACAC,OACAC,cACAC,YAEAC,aACAC,cACAC,kBACAC,SACAC,oBACAC,SACAC,YACAC,WACAC,YACAC,kBACAC,iBACAC,eACAC,MACAb,WACAc,eACAC,mBACAC,mBACAC,mCACAC,4BACAnB,cACAoB,aACAC,aACAC,WACAC,eACAC,2BACAC,0BACAC,8BACAC,uBACAC,2BAEAC,SACAf,MACAgB,YACAC,cACAC,eACAC,QACAC,cAGAC,oBACArB,MACAsB,kBACAC,wBACAnB,mCACAoB,eACAC,wBACAC,uBACAC,oBACAC,kBACAC,0BACAC,mBACAC,0BACAC,gBACAC,uBACAC,sBACAC,wBACAC,sBAEAC,eACAC,cACAC,+MACAC,mBACAC,qBAGAC,SACAC,YACA,mBACA,sBAEA,EAGAC,aACA,kBACAC,+BAEAC,WACA,kBACA9C,MACAgB,YACAC,cACAC,eACAC,QACAC,eAGA,6BACA,2CAGA,4BACA,kCAEA,2BACA,iCAGA2B,gBACA,uBACA,mBACAC,yBACAC,qBACAC,KAAA,EACArE,UACA,qBACA,yBAEAsE,oBACA,wBACA,0DACA,MACA,0BACAC,sCAGA,qDACAF,KAAAG,IACA,iBACAR,+BACA,wBACA,uBACAS,YACAC,eACAC,uBAEA,8CACA,oBAEAC,WAEAC,MAAA,KACAD,cACA,uBACA,qDAOAE,cACAd,+BACA,wBACA,uBACA,wCACA,yCACA,kBACA,2BACA,uBACA,wCAEAe,aACA,iBACA,wBACA,kBACA,kBACA,kCACA,mCACA,uBACA,sBACAf,2BACA,kBACA,eACA,WACA,sBAEA,0BAEAgB,WACA,eACA,gBACA,iBACA,wBACA,wBACA,kBACA,kCACA,mCACA,uBACA,sBACAhB,2BACA,0BAGAiB,cACA,sBACAd,yBACAC,qBACAC,KAAA,EACArE,UACA,sBAIA,2BAEA,mBACA,8BACA,mBACAkF,mBACA,EACAA,kDAEAA,2CAEAA,wBACAf,0CACAgB,oCAIA,kBACA,6BACA,mBACAD,mBACA,EACAA,iDA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","file":"js/9.bundle.ff2f940127095daa8a3e.js","sourcesContent":["<template>\r\n    <section class=\"content\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-12\">\r\n\r\n                    <div class=\"card\" v-if=\"$gate.isAdmin()\">\r\n                        <div class=\"card-header\">\r\n                            <h3 class=\"card-title\">Ticket Report</h3>\r\n\r\n                            <div class=\"card-tools\">\r\n\r\n                                <button type=\"button\" class=\"btn btn-sm btn-primary\" @click=\"newModal\">\r\n                                    <i class=\"fa fa-plus-square\"></i>\r\n                                    Export CSV\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"card-body p-2\">\r\n                            <form autocomplete=\"off\" @submit.prevent=\"getResults()\">\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col\">\r\n                                        <v-select label=\"name\" :get-option-label=\"getLabel\"\r\n                                            :reduce=\"(option) => option.id\" :options=\"search_machines\"\r\n                                            placeholder=\"Enter machines ...\" v-model=\"search.machine_id\"\r\n                                            name=\"machine_id\">\r\n                                        </v-select>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                        <v-select label=\"site_name\"\r\n                                            :reduce=\"(option) => option.id\" :options=\"search_sites\"\r\n                                            placeholder=\"Select Site...\" v-model=\"search.site_id\" name=\"site_id\">\r\n                                        </v-select>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                        <v-select label=\"site_name\"\r\n                                        :options=\"['Open', 'Closed']\"\r\n                                            placeholder=\"Select Status...\" v-model=\"search.status\" name=\"status\">\r\n                                        </v-select>\r\n                                    </div>\r\n                                    \r\n                                    <button type=\"submit\" class=\"btn btn-success\">Search</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                        <!-- /.card-header -->\r\n                        <div class=\"card-body table-responsive p-0\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Ticket No </th>\r\n                                        <th>Machine Name</th>\r\n                                        <th>Machine Far No</th>\r\n                                        <th>Created By</th>\r\n                                        <th>Created Date</th>\r\n                                        <th>Expected date</th>\r\n                                        <th>Ticket Status</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr v-for=\"ticket in Tickets.data\" :key=\"ticket.id\">\r\n                                        <td>{{ ticket.ticket_no }}</td>\r\n                                        <td class=\"text-capitalize\">{{ ticket.machine.name }}</td>\r\n                                        <td>{{ ticket.machine.far_no }}</td>\r\n                                        <td>{{ ticket.created_by_name }}</td>\r\n                                        <td>{{ ticket.created_at | myDate }}</td>\r\n                                        <td>{{ ticket.likely_date | myDate }}</td>\r\n                                        <td v-html=\"ticket.status\"></td> \r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <!-- /.card-body -->\r\n                        <div class=\"card-footer\">\r\n                            <pagination :data=\"Tickets\" @pagination-change-page=\"getResults\"></pagination>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /.card -->\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div v-if=\"!$gate.isAdmin()\">\r\n                <not-found></not-found>\r\n            </div>\r\n\r\n\r\n        </div> \r\n\r\n\r\n\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport VueTagsInput from '@johmun/vue-tags-input';\r\nexport default {\r\n    components: {\r\n        VueTagsInput,\r\n    },\r\n    data() {\r\n        return {\r\n            search_machines:[],\r\n            search_sites:[],\r\n            search: {\r\n                page: 1,\r\n                machine_id: '',\r\n                site_id: ''\r\n            },\r\n            popticket: {},\r\n            categories: [],\r\n            sub_categories: [],\r\n            sites: [],\r\n            selected_machine: '',\r\n            users: [],\r\n            machines: [],\r\n            Tickets: {},\r\n            editmode: false,\r\n            MaterialCost: null,\r\n            ServiceCost: null,\r\n            form: new Form({\r\n                id: '',\r\n                site_id: '',\r\n                category_id: '',\r\n                sub_category_id: '',\r\n                free_service_no: '',\r\n                ticket_type: 'Periodic Maintenance',\r\n                service_type: 'Paid Service',\r\n                machine_id: '',\r\n                ticket_no: '',\r\n                vendor_id: '',\r\n                user_id: '',\r\n                likely_date: '',\r\n                estimated_material_cost: '',\r\n                estimated_service_cost: '',\r\n                maintenance_provider: 'vendor',\r\n                problem_description: '',\r\n                complaint_nature: 'Major',\r\n            }),\r\n            stages: [{\r\n                id: '',\r\n                stage_no: '',\r\n                stage_date: '',\r\n                description: '',\r\n                file: '',\r\n                new_file: ''\r\n            }],\r\n\r\n            formclose: new Form({\r\n                id: '',\r\n                machine_status: '',\r\n                edit_type: 'closeticket',\r\n                ticket_type: 'Periodic Maintenance',\r\n                actual_date: '',\r\n                actual_material_cost: '',\r\n                actual_service_cost: '',\r\n                current_run_hour: '',\r\n                current_km_run: '',\r\n                current_production_fig: '',\r\n                production_loss: '',\r\n                production_loss_amount: '',\r\n                status: 'Closed',\r\n                vendor_resolve_date: '',\r\n                vendor_attain_date: '',\r\n                vendor_response_date: '',\r\n                vendor_call_date: '',\r\n            }),\r\n            pop_machine: '',\r\n            pop_ticket: '',\r\n            opn_stage: ['Vendor created', 'Vendor Assigned', 'Order issued', 'Payment under process', 'Payment Done', 'Logistics under process', 'Materials despatched', 'Material received at site', 'Maintainace under progress'],\r\n            last_stage_index: 0,\r\n            last_stage_date: '',\r\n        }\r\n    },\r\n    methods: {\r\n        getLabel(val) {\r\n            if (typeof val === 'object') {\r\n                return val.far_no + ' - ' + val.name;\r\n            } else {\r\n                return val;\r\n            }\r\n        },\r\n        viewModal(ticket) {\r\n            this.pop_ticket = ticket\r\n            $('#viewmodal').modal('show');\r\n        },\r\n        AddStage() {\r\n            this.stages.push({\r\n                id: '',\r\n                stage_no: '',\r\n                stage_date: '',\r\n                description: '',\r\n                file: '',\r\n                new_file: ''\r\n            });\r\n        },\r\n        async choose_stage_file(event, x) {\r\n            this.stages[x].new_file = event.target.files[0];\r\n        },\r\n\r\n        async uploadMaterialCost(event) {\r\n            this.MaterialCost = event.target.files\r\n        },\r\n        async uploadServiceCost(event) {\r\n            this.ServiceCost = event.target.files\r\n        },\r\n\r\n        getResults(page = 1) {\r\n            this.$Progress.start();\r\n            this.search.page = page\r\n            axios.get('/api/ticket', {\r\n                params: this.search\r\n            }).then(({\r\n                data\r\n            }) => (this.Tickets = data.data));\r\n            this.$Progress.finish();\r\n        },\r\n        submitCloseTicket() {\r\n            this.$validator.reset();\r\n            this.$validator.validateAll('closeticket').then(async (valid) => {\r\n                if (valid) {\r\n                    let pop_loader = this.$loading.show({\r\n                        container: this.$refs.vps_submit_pop,\r\n                    });\r\n\r\n                    this.formclose.put('/api/ticket/' + this.formclose.id)\r\n                        .then((response) => {\r\n                            if (response.data.success) {\r\n                                $('#closemodal').modal('hide');\r\n                                this.$validator.reset();\r\n                                this.formclose.reset();\r\n                                Toast.fire({\r\n                                    icon: 'success',\r\n                                    title: response.data.message\r\n                                });\r\n                                this.upload_files(this.formclose.id, 'actual')\r\n                                this.loadTickets();\r\n                            }\r\n                            pop_loader.hide()\r\n                        })\r\n                        .catch(() => {\r\n                            pop_loader.hide()\r\n                            if (typeof err.response.data != 'undefined') {\r\n                                this.$setErrorsFromResponse(err.response.data);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        },\r\n\r\n        closeModal(ticket) {\r\n            $('#closemodal').modal('show');\r\n            this.$validator.reset();\r\n            this.formclose.reset();\r\n            this.$refs.fileactualservice.value = null;\r\n            this.$refs.fileactualmaterial.value = null;\r\n            this.pop_ticket = ticket\r\n            this.pop_machine = ticket.machine\r\n            this.formclose.fill(ticket);\r\n            this.formclose.edit_type = 'closeticket'\r\n        },\r\n        editModal(ticket) {\r\n            this.editmode = true;\r\n            this.$validator.pause();\r\n            this.form.reset();\r\n            this.pop_ticket = ticket\r\n            this.$refs.fileservice.value = null;\r\n            this.$refs.filematerial.value = null;\r\n            this.MaterialCost = null\r\n            this.ServiceCost = null\r\n            $('#addNew').modal('show');\r\n            this.form.fill(ticket);\r\n            this.stages = []\r\n            if (ticket.stages) {\r\n                this.stages = ticket.stages\r\n            }\r\n            this.$validator.resume();\r\n        },\r\n        newModal() {\r\n            this.stages = []\r\n            this.AddStage()\r\n            this.editmode = false;\r\n            this.$validator.reset();\r\n            this.$validator.pause();\r\n            this.form.reset();\r\n            this.$refs.fileservice.value = null;\r\n            this.$refs.filematerial.value = null;\r\n            this.MaterialCost = null\r\n            this.ServiceCost = null\r\n            $('#addNew').modal('show');\r\n            this.$validator.resume();\r\n        },\r\n\r\n        loadTickets() {\r\n            if (this.$gate.isAdmin()) {\r\n                axios.get(\"/api/ticket\",{\r\n                params: this.search\r\n            }).then(({\r\n                    data\r\n                }) => (this.Tickets = data.data));\r\n            }\r\n        },\r\n\r\n        async upload_files(id, isactual = false) {\r\n            let fl = 0\r\n            if (this.MaterialCost) {\r\n                this.MaterialCost.forEach(file => {\r\n                    var fd = new FormData();\r\n                    fd.append(`file`, file);\r\n                    if (isactual) {\r\n                        fd.append(`file_type`, 'Actual Estimated Material');\r\n                    } else {\r\n                        fd.append(`file_type`, 'Estimated Material');\r\n                    }\r\n                    fd.append(`ticket_id`, id);\r\n                    axios.post('api/ticket/files', fd).then((res) => {\r\n                        console.log('gallery uploaded')\r\n                    })\r\n                });\r\n            }\r\n            if (this.ServiceCost) {\r\n                this.ServiceCost.forEach(file => {\r\n                    var fd = new FormData();\r\n                    fd.append(`file`, file);\r\n                    if (isactual) {\r\n                        fd.append(`file_type`, 'Actual Estimated Service');\r\n                    } else {\r\n                        fd.append(`file_type`, 'Estimated Service');\r\n                    }\r\n                    fd.append(`ticket_id`, id);\r\n                    axios.post('api/ticket/files', fd).then((res) => {\r\n                        console.log('gallery uploaded')\r\n                    })\r\n                });\r\n            }\r\n        },\r\n\r\n        async upload_stages(id) {\r\n            if (this.stages) {\r\n                this.stages.forEach(stage => {\r\n                    var fd = new FormData();\r\n                    fd.append(`id`, stage.id);\r\n                    fd.append(`stage_no`, stage.stage_no);\r\n                    fd.append(`stage_date`, stage.stage_date);\r\n                    fd.append(`description`, stage.description);\r\n                    //fd.append(`new_file`, stage.new_file);\r\n                    // fd.append(`file`, stage.file);\r\n                    fd.append(`ticket_id`, id);\r\n                    axios.post('api/ticket/stages', fd).then((res) => {\r\n                        console.log('stages uploaded')\r\n                    })\r\n                });\r\n            }\r\n        },\r\n\r\n        submitTicket() {\r\n            this.$validator.validateAll().then(async (valid) => {\r\n                if (valid) {\r\n                    let pop_loader = this.$loading.show({\r\n                        container: this.$refs.vps_submit_pop,\r\n                    });\r\n                    if (this.form.id) {\r\n                        this.form.put('/api/ticket/' + this.form.id)\r\n                            .then((response) => {\r\n                                if (response.data.success) {\r\n                                    $('#addNew').modal('hide');\r\n                                    Toast.fire({\r\n                                        icon: 'success',\r\n                                        title: response.data.message\r\n                                    });\r\n                                    this.upload_stages(this.form.id)\r\n                                    this.upload_files(this.form.id)\r\n                                    this.loadTickets();\r\n                                }\r\n                                pop_loader.hide()\r\n                            })\r\n                            .catch(() => {\r\n                                pop_loader.hide()\r\n                                if (typeof err.response.data != 'undefined') {\r\n                                    this.$setErrorsFromResponse(err.response.data);\r\n                                }\r\n                            })\r\n\r\n                    } else {\r\n                        this.form.post('/api/ticket')\r\n                            .then((response) => {\r\n                                if (response.data.success) {\r\n                                    $('#addNew').modal('hide');\r\n                                    Toast.fire({\r\n                                        icon: 'success',\r\n                                        title: response.data.message\r\n                                    });\r\n\r\n                                    this.upload_files(response.data.data.id)\r\n                                    this.loadTickets();\r\n                                }\r\n                                pop_loader.hide()\r\n                            })\r\n                            .catch(() => {\r\n                                pop_loader.hide()\r\n                                if (typeof err.response.data != 'undefined') {\r\n                                    this.$setErrorsFromResponse(err.response.data);\r\n                                }\r\n                            })\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n\r\n        },\r\n\r\n        async check_free_service() {\r\n            if (this.selected_machine) {\r\n                if (this.selected_machine.completed_free_service >= this.selected_machine.free_service_no) {\r\n                    this.form.service_type = 'Paid Service';\r\n                    this.form.free_service_no = ''\r\n                } else {\r\n                    this.form.free_service_no = (this.selected_machine.completed_free_service + 1)\r\n                }\r\n\r\n\r\n                if (this.selected_machine && this.selected_machine.machine_type == 'New' && this.form.service_type == 'Free Service') {\r\n                    //  this.selected_machine.free_service_no\r\n                }\r\n            }\r\n        },\r\n\r\n        async get_machine() {\r\n            axios.get(\"/api/ticket_machine\", {\r\n                params: {\r\n                    site_id: this.form.site_id,\r\n                    category_id: this.form.category_id,\r\n                    sub_category_id: this.form.sub_category_id,\r\n                }\r\n            }).then(response => {\r\n                this.machines = response.data.data;\r\n            }).catch(() => console.warn('Oh. Something went wrong'));\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n    created() {\r\n        this.loadTickets();\r\n    },\r\n    beforeCreate() {\r\n        axios.get(\"api/get_pre_machine\")\r\n            .then((res) => {\r\n                this.categories = res.data.data.Category;\r\n                this.sites = res.data.data.sites;\r\n            })\r\n        axios.get(\"/api/initial_ticket\").then(response => {\r\n            this.users = response.data.data.vendors;\r\n            this.machines = response.data.data.machines;\r\n            this.search_machines = response.data.data.machines;\r\n            this.search_sites = response.data.data.sites;\r\n        }).catch(() => console.warn('Oh. Something went wrong'));\r\n    },\r\n    watch: {\r\n        async 'form.sub_category_id'(n, o) {\r\n            if (n) {\r\n                this.get_machine()\r\n            }\r\n        },\r\n        async 'form.site_id'(n, o) {\r\n            if (n) {\r\n                this.get_machine()\r\n            }\r\n        },\r\n\r\n        'form.category_id': {\r\n            handler: function (n, o) {\r\n\r\n                if (n) {\r\n                    axios.get(\"api/category/\" + n)\r\n                        .then((res) => {\r\n                            this.sub_categories = res.data.data;\r\n                        })\r\n                    this.get_machine()\r\n                }\r\n            },\r\n            deep: true,\r\n            initial: true\r\n        },\r\n        stages: {\r\n            handler: function (n, o) {\r\n                if (n && n.length > 0) {\r\n                    let la = n[n.length - 1];\r\n                    if (la.stage_no)\r\n                        this.last_stage_index = this.opn_stage.indexOf(la.stage_no);\r\n                    if (la.stage_date)\r\n                        this.last_stage_date = new Date(la.stage_date).toISOString();\r\n                } else {\r\n                    this.last_stage_index = 0;\r\n                    if (this.pop_ticket && this.pop_ticket.likely_date) {\r\n                        this.last_stage_date = new Date(this.pop_ticket.likely_date).toISOString();\r\n                    } else {\r\n                        this.last_stage_date = new Date().toISOString();\r\n                    }\r\n\r\n                }\r\n            },\r\n            deep: true,\r\n            initial: true,\r\n        },\r\n\r\n        async 'form.maintenance_provider'(n) {\r\n            if (n != 'vendor') {\r\n                this.form.service_type = 'Paid Service'\r\n            }\r\n            axios.get(\"api/user/list\", {\r\n                params: {\r\n                    type: n\r\n                }\r\n            })\r\n                .then(response => {\r\n                    this.users = response.data.data;\r\n                }).catch(() => console.warn('Oh. Something went wrong'));\r\n        },\r\n\r\n        async 'form.machine_id'(n) {\r\n            this.selected_machine = this.machines.find(x => x.id === n);\r\n            await this.check_free_service()\r\n        },\r\n        async 'form.service_type'(n) {\r\n            if (n == 'Free Service') {\r\n                await this.check_free_service()\r\n            }\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n","/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Report.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Report.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8f6b77f2\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Report.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"content\"},[_c('div',{staticClass:\"container-fluid\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12\"},[(_vm.$gate.isAdmin())?_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-header\"},[_c('h3',{staticClass:\"card-title\"},[_vm._v(\"Ticket Report\")]),_vm._v(\" \"),_c('div',{staticClass:\"card-tools\"},[_c('button',{staticClass:\"btn btn-sm btn-primary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.newModal}},[_c('i',{staticClass:\"fa fa-plus-square\"}),_vm._v(\"\\n                                Export CSV\\n                            \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"card-body p-2\"},[_c('form',{attrs:{\"autocomplete\":\"off\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.getResults()}}},[_c('div',{staticClass:\"form-row\"},[_c('div',{staticClass:\"col\"},[_c('v-select',{attrs:{\"label\":\"name\",\"get-option-label\":_vm.getLabel,\"reduce\":function (option) { return option.id; },\"options\":_vm.search_machines,\"placeholder\":\"Enter machines ...\",\"name\":\"machine_id\"},model:{value:(_vm.search.machine_id),callback:function ($$v) {_vm.$set(_vm.search, \"machine_id\", $$v)},expression:\"search.machine_id\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('v-select',{attrs:{\"label\":\"site_name\",\"reduce\":function (option) { return option.id; },\"options\":_vm.search_sites,\"placeholder\":\"Select Site...\",\"name\":\"site_id\"},model:{value:(_vm.search.site_id),callback:function ($$v) {_vm.$set(_vm.search, \"site_id\", $$v)},expression:\"search.site_id\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('v-select',{attrs:{\"label\":\"site_name\",\"options\":['Open', 'Closed'],\"placeholder\":\"Select Status...\",\"name\":\"status\"},model:{value:(_vm.search.status),callback:function ($$v) {_vm.$set(_vm.search, \"status\", $$v)},expression:\"search.status\"}})],1),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-success\",attrs:{\"type\":\"submit\"}},[_vm._v(\"Search\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"card-body table-responsive p-0\"},[_c('table',{staticClass:\"table table-hover\"},[_vm._m(0),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Tickets.data),function(ticket){return _c('tr',{key:ticket.id},[_c('td',[_vm._v(_vm._s(ticket.ticket_no))]),_vm._v(\" \"),_c('td',{staticClass:\"text-capitalize\"},[_vm._v(_vm._s(ticket.machine.name))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(ticket.machine.far_no))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(ticket.created_by_name))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm._f(\"myDate\")(ticket.created_at)))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm._f(\"myDate\")(ticket.likely_date)))]),_vm._v(\" \"),_c('td',{domProps:{\"innerHTML\":_vm._s(ticket.status)}})])}),0)])]),_vm._v(\" \"),_c('div',{staticClass:\"card-footer\"},[_c('pagination',{attrs:{\"data\":_vm.Tickets},on:{\"pagination-change-page\":_vm.getResults}})],1)]):_vm._e()])]),_vm._v(\" \"),(!_vm.$gate.isAdmin())?_c('div',[_c('not-found')],1):_vm._e()])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"Ticket No \")]),_vm._v(\" \"),_c('th',[_vm._v(\"Machine Name\")]),_vm._v(\" \"),_c('th',[_vm._v(\"Machine Far No\")]),_vm._v(\" \"),_c('th',[_vm._v(\"Created By\")]),_vm._v(\" \"),_c('th',[_vm._v(\"Created Date\")]),_vm._v(\" \"),_c('th',[_vm._v(\"Expected date\")]),_vm._v(\" \"),_c('th',[_vm._v(\"Ticket Status\")]),_vm._v(\" \"),_c('th',[_vm._v(\"Action\")])])])}]\nexport { render, staticRenderFns }"],"sourceRoot":""}